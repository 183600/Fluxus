// Generated by HyperStatic/CXX Compiler
#include <tuple>
#include <sstream>
#include <algorithm>
#include <memory>
#include <vector>
#include <string>
#include <iostream>

// Processing expression: Call

// About to call generatePythonCall

int __debug_generatePythonCall_called = 1;

// Processing expression: Variable

// Processing expression: Literal

// Processing expression: Literal

// Function call: print with 2 args

// Python argument 0: Located {locSpan = SourceSpan {spanFilename = "<input>", spanStart = SourcePos {posLine = 0, posColumn = 0}, spanEnd = SourcePos {posLine = 0, posColumn = 0}}, locValue = ArgPositional (Located {locSpan = SourceSpan {spanFilename = "<input>", spanStart = SourcePos {posLine = 0, posColumn = 0}, spanEnd = SourcePos {posLine = 0, posColumn = 0}}, locValue = PyLiteral (PyString "hello")})}

// Python argument 1: Located {locSpan = SourceSpan {spanFilename = "<input>", spanStart = SourcePos {posLine = 0, posColumn = 0}, spanEnd = SourcePos {posLine = 0, posColumn = 0}}, locValue = ArgPositional (Located {locSpan = SourceSpan {spanFilename = "<input>", spanStart = SourcePos {posLine = 0, posColumn = 0}, spanEnd = SourcePos {posLine = 0, posColumn = 0}}, locValue = PyLiteral (PyInt 42)})}

int __debug_print = 42;

int __debug_print_args = 2;

// print function called with 2 arguments

// print argument 0: CppLiteral (CppStringLit "hello")

// print argument 1: CppLiteral (CppIntLit 42)

// print printable argument 0: CppLiteral (CppStringLit "hello")

// print printable argument 1: CppLiteral (CppIntLit 42)

// Final printable arg type: CppLiteral (CppStringLit "hello")

// Final printable arg type: CppLiteral (CppIntLit 42)

// Returned from generatePythonCall

int main() {
    std::cout << "hello" << " " << 42 << std::endl;
    return 0;
}

