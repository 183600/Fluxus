fluxus> build (lib + exe + test) with ghc-9.8.4
Preprocessing library for fluxus-0.1.0.0..
Building library for fluxus-0.1.0.0..
Preprocessing test suite 'fluxus-test' for fluxus-0.1.0.0..
Building test suite 'fluxus-test' for fluxus-0.1.0.0..
[3 of 5] Compiling Test.Fluxus.Parser.Go

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:50:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
   |
50 |         case locatedValue (head tokens) of
   |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:60:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
   |
60 |         case locatedValue (head tokens) of
   |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:271:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
271 |         case locatedValue (head toks) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:363:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
363 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:365:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
365 |         case locatedValue (head imports) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:388:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
388 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:406:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
406 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:408:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
408 |         case locatedValue (head imports) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:429:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
429 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:431:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
431 |         case locatedValue (head imports) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:450:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
450 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:452:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
452 |         case locatedValue (head imports) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:482:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
482 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:499:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
499 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:501:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
501 |         case locatedValue (head imports) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:519:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
519 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:521:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
521 |         case locatedValue (head imports) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:540:40: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
540 |           let imports = goFileImports (head files)
    |                                        ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:570:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
570 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:572:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
572 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:637:38: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
637 |         let imports = goFileImports (head files)
    |                                      ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:659:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
659 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:737:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
737 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:739:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
739 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:759:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
759 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:761:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
761 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:779:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
779 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:781:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
781 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:814:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
814 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:816:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
816 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:854:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
854 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:856:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
856 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:886:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
886 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:888:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
888 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:918:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
918 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:920:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
920 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:967:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
967 |         let decls = goFileDecls (head files)
    |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:969:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
    |
969 |         case locatedValue (head decls) of
    |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:1018:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
     |
1018 |         let decls = goFileDecls (head files)
     |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:1020:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
     |
1020 |         case locatedValue (head decls) of
     |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:1065:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
     |
1065 |         let decls = goFileDecls (head files)
     |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:1067:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
     |
1067 |         case locatedValue (head decls) of
     |                            ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:1097:34: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
     |
1097 |         let decls = goFileDecls (head files)
     |                                  ^^^^

/home/qwe12345678/hyperstatic2/test/Test/Fluxus/Parser/Go.hs:1099:28: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
     |
1099 |         case locatedValue (head decls) of
     |                            ^^^^
[5 of 5] Compiling Main
[6 of 6] Linking .stack-work/dist/x86_64-linux/ghc-9.8.4/build/fluxus-test/fluxus-test
Preprocessing executable 'fluxus' for fluxus-0.1.0.0..
Building executable 'fluxus' for fluxus-0.1.0.0..
[1 of 1] Compiling Main [Flags changed]

/home/qwe12345678/hyperstatic2/app/Main.hs:1:1: warning: [GHC-85401] [-Wmissing-export-lists]
    The export item ‘module Main’ is missing an export list
  |
1 | {-# LANGUAGE OverloadedStrings #-}
  | ^

/home/qwe12345678/hyperstatic2/app/Main.hs:36:11: warning: [GHC-62161] [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In a case alternative:
        Patterns of type ‘Either CompilerError CompilerConfig’ not matched:
            Left (ParseError _ _)
            Left (TypeError _ _)
            Left (OptimizationError _)
            Left (CodeGenError _)
            ...
   |
36 |           case validateConfig config of
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

/home/qwe12345678/hyperstatic2/app/Main.hs:69:25: warning: [GHC-63394] [-Wx-partial]
    In the use of ‘head’
    (imported from Prelude, but defined in GHC.List):
    "This is a partial function, it throws an error on empty lists. Use pattern matching or Data.List.uncons instead. Consider refactoring to use Data.List.NonEmpty."
   |
69 |       then compileFile (head inputFiles)
   |                         ^^^^
[2 of 2] Linking .stack-work/dist/x86_64-linux/ghc-9.8.4/build/fluxus/fluxus [Objects changed]
Preprocessing executable 'test-python-parser' for fluxus-0.1.0.0..
Building executable 'test-python-parser' for fluxus-0.1.0.0..
[1 of 1] Compiling Main [Flags changed]

/home/qwe12345678/hyperstatic2/test-debug.hs:1:1: warning: [GHC-85401] [-Wmissing-export-lists]
    The export item ‘module Main’ is missing an export list
  |
1 | {-# LANGUAGE OverloadedStrings #-}
  | ^

/home/qwe12345678/hyperstatic2/test-debug.hs:127:45: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0) arising from a use of ‘show’ at test-debug.hs:127:45-48
        (Num a0) arising from the literal ‘0’ at test-debug.hs:127:81
        (Enum a0)
          arising from the arithmetic sequence ‘0 .. ’
          at test-debug.hs:127:80-84
    • In the first argument of ‘(++)’, namely ‘show i’
      In the second argument of ‘(++)’, namely
        ‘show i ++ "] " ++ show token’
      In the second argument of ‘($)’, namely
        ‘"  [" ++ show i ++ "] " ++ show token’
    |
127 |   mapM_ (\(i, token) -> putStrLn $ "  [" ++ show i ++ "] " ++ show token) (zip [0..] tokens)
    |                                             ^^^^
[2 of 2] Linking .stack-work/dist/x86_64-linux/ghc-9.8.4/build/test-python-parser/test-python-parser [Objects changed]
Preprocessing executable 'test-python-lexer' for fluxus-0.1.0.0..
Building executable 'test-python-lexer' for fluxus-0.1.0.0..
[1 of 1] Compiling Main [Flags changed]

/home/qwe12345678/hyperstatic2/debug_python_lexer.hs:1:1: warning: [GHC-85401] [-Wmissing-export-lists]
    The export item ‘module Main’ is missing an export list
  |
1 | #!/usr/bin/env runhaskell
  | ^
[2 of 2] Linking .stack-work/dist/x86_64-linux/ghc-9.8.4/build/test-python-lexer/test-python-lexer [Objects changed]
fluxus> copy/register
Installing library in /home/qwe12345678/hyperstatic2/.stack-work/install/x86_64-linux/2a42907f94f022bb546dec6cd9ecfcdcae21b985a1b0099a2bd97a2a1d45b651/9.8.4/lib/x86_64-linux-ghc-9.8.4/fluxus-0.1.0.0-IDP9TaNniK1JAIG0cjWKC5
Installing executable fluxus in /home/qwe12345678/hyperstatic2/.stack-work/install/x86_64-linux/2a42907f94f022bb546dec6cd9ecfcdcae21b985a1b0099a2bd97a2a1d45b651/9.8.4/bin
Installing executable test-python-parser in /home/qwe12345678/hyperstatic2/.stack-work/install/x86_64-linux/2a42907f94f022bb546dec6cd9ecfcdcae21b985a1b0099a2bd97a2a1d45b651/9.8.4/bin
Installing executable test-python-lexer in /home/qwe12345678/hyperstatic2/.stack-work/install/x86_64-linux/2a42907f94f022bb546dec6cd9ecfcdcae21b985a1b0099a2bd97a2a1d45b651/9.8.4/bin
Registering library for fluxus-0.1.0.0..
fluxus> test (suite: fluxus-test)


HyperStatic Compiler Test Suite
  Python Parser
    Python Lexer
      tokenizes simple expressions [✔]
      tokenizes Python keywords [✔]
      tokenizes string literals [✔]
      tokenizes number literals [✔]
    Python Lexer - tokens coverage
      tokenizes identifiers [✔]
      tokenizes common keywords [✔]
      tokenizes arithmetic operators [✔]
      tokenizes comparison operators [✔]
      tokenizes logical operators [✔]
      tokenizes assignment/walrus/arrow/ellipsis [✔]
      tokenizes @ delimiter and decorators [✔]
      tokenizes compound assignments [✔]
      tokenizes number literals (dec/hex/oct/bin/float/exp) [✔]
      tokenizes bytes literals (b/B prefixes) [✔]
      tokenizes strings and f-strings [✔]
      tokenizes bytes literals [✔]
      tokenizes delimiters [✔]
      tokenizes parentheses, brackets and braces around identifiers [✔]
    Python Parser
      parses simple expressions [✔]
      parses function definitions [✔]
      parses class definitions [✔]
      parses if statements [✔]
  Go Parser
    Go Lexer
      tokenizes simple expressions [✔]
      tokenizes Go keywords [✔]
      tokenizes string literals [✔]
      tokenizes raw string literals [✔]
      tokenizes number literals [✔]
    Go Lexer - tokens coverage
      tokenizes identifiers [✔]
      tokenizes common keywords [✔]
      tokenizes arithmetic operators [✔]
      tokenizes comparison operators [✔]
      tokenizes logical operators [✔]
      tokenizes assignment and define [✔]
      tokenizes inc/dec, shifts and bitwise [✔]
      tokenizes compound assignments [✔]
      tokenizes special operators [✔]
      tokenizes number literals (dec/float/exp/imag) [✔]
      tokenizes string, raw string and rune literals [✔]
      tokenizes delimiters [✔]
      tokenizes function literal tokens [✔]
      tokenizes hex, octal and binary integers [✔]
      tokenizes string escape sequences [✔]
      produces newline tokens [✔]
    Go Lexer - basic data types
      tokenizes boolean literals true/false as identifiers [✔]
      tokenizes basic type identifiers [✔]
      tokenizes UTF-8 string literals [✔]
      tokenizes imaginary number literals for complex numbers [✔]
    Go Parser - Import Declaration
parseFile: parsing decls
parseFuncDecl: entering
parseFile: decls count = 0
      parses single import statement [✔]
      parses grouped import statements [✘]
parseFile: decls count = 0
      parses import with alias [✔]
parseFile: decls count = 0
      parses import with dot notation [✔]
parseFile: decls count = 0
      parses import with blank identifier [✔]
      parses multiple imports with different styles [✘]
parseFile: decls count = 0
      parses import with nested package path [✔]
parseFile: decls count = 0
      parses import with deeply nested package path [✔]
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
      parses standard library imports [✔]
      parses package with both imports and declarations [✘]
    Go Parser
      Go Parser - Package Declaration
parseFile: decls count = 0
        parses package main declaration [✔]
parseFile: decls count = 0
        parses package with custom name [✔]
parseFile: decls count = 0
        parses package with underscore in name [✔]
parseFile: decls count = 0
        parses package with numbers in name [✔]
        parses package declaration followed by imports [✔]
parseFile: decls count = 1
        parses package declaration followed by function [✔]
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
parseFile: decls count = 0
        parses package declaration with common library names [✔]
parseFile: decls count = 1
        parses package declaration at start of file [✔]
        rejects file without package declaration [✔]
      parses package declaration [✔]
parseFile: decls count = 1
      parses function declarations [✔]
parseFile: decls count = 1
      parses variable declarations [✔]
parseFile: decls count = 1
      parses type declarations [✔]
parseFile: decls count = 0
      parses function with parameters and return type [✘]
parseFile: decls count = 0
      parses function with multiple return values [✘]
parseFile: decls count = 0
      parses function with no parameters and no return value [✘]
parseFile: decls count = 0
      parses main function as program entry point [✘]
parseFile: decls count = 0
      parses function with variadic parameters [✘]
parseFile: decls count = 0
      parses function with named return values [✘]
parseFile: decls count = 0
      parses recursive function [✘]
parseFile: decls count = 0
      parses function with pointer parameters and return type [✘]
  Type Inference
    Basic Type Inference
      infers integer literal types [✔]
      infers string literal types [✔]
      infers boolean literal types [✔]
      infers list types [✔]
      infers function types [✔]
    Type Unification
      unifies identical types [✔]
      fails to unify different types [✔]
      unifies type variables [✔]
      unifies complex types [✔]
    Constraint Solving
      solves simple constraints [✔]
      detects inconsistent constraints [✔]
      propagates constraints [✔]
  C++ Code Generation
    Type Mapping
      maps basic types correctly [✔]
      maps container types correctly [✔]
      maps smart pointer types correctly [✔]
      maps complex types correctly [✔]
    Expression Generation
      generates literal expressions [✔]
      generates binary expressions [✔]
      generates function calls [✔]
    Statement Generation
      generates expression statements [✔]
      generates return statements [✔]
    Declaration Generation
      generates variable declarations [✔]
      generates function declarations [✔]
      generates class declarations [✔]
      generates program units [✔]

Failures:

  test/Test/Fluxus/Parser/Go.hs:383:17: 
  1) HyperStatic Compiler Test Suite, Go Parser, Go Parser - Import Declaration, parses grouped import statements
       Parser failed

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser - Import Declaration/parses grouped import statements/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:477:17: 
  2) HyperStatic Compiler Test Suite, Go Parser, Go Parser - Import Declaration, parses multiple imports with different styles
       Parser failed

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser - Import Declaration/parses multiple imports with different styles/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:565:17: 
  3) HyperStatic Compiler Test Suite, Go Parser, Go Parser - Import Declaration, parses package with both imports and declarations
       Parser failed

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser - Import Declaration/parses package with both imports and declarations/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:815:22: 
  4) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses function with parameters and return type
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses function with parameters and return type/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:855:22: 
  5) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses function with multiple return values
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses function with multiple return values/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:887:22: 
  6) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses function with no parameters and no return value
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses function with no parameters and no return value/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:919:22: 
  7) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses main function as program entry point
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses main function as program entry point/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:968:22: 
  8) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses function with variadic parameters
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses function with variadic parameters/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:1019:22: 
  9) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses function with named return values
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses function with named return values/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:1066:22: 
  10) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses recursive function
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses recursive function/" --seed 543358893

  test/Test/Fluxus/Parser/Go.hs:1098:22: 
  11) HyperStatic Compiler Test Suite, Go Parser, Go Parser, parses function with pointer parameters and return type
       expected: 1
        but got: 0

  To rerun use: --match "/HyperStatic Compiler Test Suite/Go Parser/Go Parser/parses function with pointer parameters and return type/" --seed 543358893

Randomized with seed 543358893

Finished in 0.0229 seconds
103 examples, 11 failures



fluxus> Test suite fluxus-test failed
Completed 2 action(s).

Error: [S-7282]
       Stack failed to execute the build plan.
       
       While executing the build plan, Stack encountered the error:
       
       Error: [S-1995]
       Test suite failure for package fluxus-0.1.0.0
           fluxus-test:  exited with: ExitFailure 1
       Logs printed to console
       
