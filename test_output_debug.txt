fluxus> test (suite: fluxus-test)


Fluxus Compiler Comprehensive Test Suite
  Unit Tests
    Analysis
      Type Inference
        Basic Type Inference
          infers integer literal types
          infers string literal types
          infers boolean literal types
          infers list types
          infers function types
          infers dictionary types
          infers optional types
          infers tuple types
          infers generic types
          infers owned types
          infers shared types
        Type Unification
          unifies identical types
          fails to unify different types
          unifies type variables
          unifies complex types
          unifies nested types
          unifies function types
          fails to unify function types with different arity
          unifies recursive types
          detects occurs check failure
        Constraint Solving
          solves simple constraints
          detects inconsistent constraints
          propagates constraints
          solves complex constraint chains
          solves function type constraints
          handles cyclic constraints gracefully
          solves mixed type constraints
      Escape Analysis Tests
        Basic Escape Analysis
          identifies non-escaping local variables
          identifies escaping variables
        Complex Escape Analysis
          analyzes escape behavior in nested functions
          analyzes escape behavior in data structures
        Edge Cases
          handles empty functions
          handles recursive functions
      Ownership Inference Tests
        Basic Ownership Inference
          infers ownership of local variables
          identifies shared references
        Ownership Transfer
          detects ownership transfer in function calls
        Borrowing Analysis
          identifies immutable borrows
          identifies mutable borrows
        Edge Cases
          handles ownership in loops
          handles ownership in exception handling
      Smart Fallback Tests
        Basic Fallback Mechanisms
          falls back to interpreter for unsupported constructs
          identifies safe optimization regions
        Optimization Fallback
          handles optimization failures gracefully
          preserves semantics when falling back
        Error Recovery
          recovers from analysis errors
          provides meaningful error messages
        Edge Cases
          handles recursive functions with fallback
          handles dynamic code execution
    Parsers
      Python Parser
        Python Lexer
          tokenizes simple expressions
          tokenizes Python keywords
          tokenizes string literals
          tokenizes number literals
          tokenizes complex expressions
          tokenizes indentation and newlines
          tokenizes escape sequences in strings
          tokenizes boolean literals
          tokenizes comments
        Python Parser
          parses simple expressions
          parses function definitions
          parses function definitions with parameters
          parses class definitions
          parses class definitions with inheritance
          parses if statements
          parses if-else statements
          parses while loops
          parses for loops
          parses try-except blocks
          parses list comprehensions
      Go Parser
        Go Lexer
          tokenizes simple expressions
          tokenizes Go keywords
          tokenizes string literals
          tokenizes raw string literals
          tokenizes number literals
          tokenizes Go operators
          tokenizes Go delimiters
          tokenizes Go comments
          tokenizes complex expressions
        Go Parser
          parses package declaration
          parses function declarations
          parses function declarations with parameters
          parses variable declarations
          parses variable declarations with initialization
          parses variable declarations
          parses type declarations
          parses struct declarations
          parses interface declarations
          parses if statements
          parses for loops
      Go Comprehensive Syntax Coverage
        parses all Go examples in test/go250923 FAILED [1]
    Code Generation
      C++ Code Generation
        Type Mapping
          maps basic types correctly
          maps container types correctly
          maps smart pointer types correctly
          maps complex types correctly
          maps integer types of different sizes
          maps floating point types correctly
          maps tuple types correctly
          maps nested container types correctly
          maps function pointer types correctly
        Expression Generation
          generates literal expressions
          generates floating point literals
          generates character literals
          generates binary expressions
          generates complex binary expressions
          generates unary expressions
          generates ternary expressions
          generates function call expressions
          generates method call expressions
          generates member access expressions
          generates array access expressions
          generates lambda expressions
        Statement Generation
          generates expression statements
          generates return statements
          generates void return statements
          generates if statements
          generates if-else statements
          generates while loops
          generates for loops
          generates range-based for loops
          generates switch statements
          generates try-catch blocks
        Declaration Generation
          generates variable declarations
          generates uninitialized variable declarations
          generates constant variable declarations
          generates reference variable declarations
          generates function declarations
          generates function declarations with default parameters
          generates template function declarations
          generates class declarations
          generates class declarations with inheritance
          generates template class declarations
          generates namespace declarations
          generates enum declarations
          generates program units
      Go Code Generation Tests
        generates basic Go code structure
        handles simple Python functions
        handles variable declarations
        handles struct generation
        handles interface generation
        handles error handling
    Optimization
      Optimization Tests
        Constant Folding
          Basic Constant Folding
            folds integer addition
            folds integer subtraction
            folds integer multiplication
            folds integer division
            folds boolean AND operation
            folds boolean OR operation
            folds string concatenation
          Complex Constant Folding
            folds nested binary operations
            folds multiple operations
            folds mixed type operations
            does not fold non-constant expressions
          Edge Cases
            folds division by zero to error
            handles overflow gracefully
            handles floating point precision
            folds unary NOT operation
            folds arithmetic with negative numbers
        Dead Code Elimination
          Basic Dead Code Elimination
            eliminates unreachable statements after return
            eliminates unreachable code in if branches
            eliminates unused variable assignments
          Control Flow Optimization
            eliminates redundant if statements
            eliminates always-false if statements
            optimizes if-else with constant condition
            eliminates empty loops
            eliminates unreachable loop bodies
          Function Optimization
            eliminates unused functions
            eliminates unreachable code after early returns
            eliminates unused function parameters
        Function Inlining
          Basic Function Inlining
            inlines simple function calls
            inlines functions with multiple parameters
            inlines functions with multiple statements
            preserves function calls that cannot be inlined
          Inlining Optimizations
            applies constant propagation after inlining
            inlines recursive functions with depth limit
            inlines nested function calls
          Edge Cases
            handles functions with side effects
            handles functions with complex control flow
            handles function calls in expressions
    Runtime
      Python Runtime Tests
        Memory Management
          manages Python object lifecycle
          handles reference counting correctly
          manages garbage collection
          optimizes memory allocation
          handles circular references
        Object Model
          creates Python objects correctly
          manages attribute access
          handles method calls
          supports inheritance
          handles multiple inheritance
          manages class vs instance attributes
        Builtin Functions
          supports len() function
          supports print() function
          supports range() function
          supports list operations
          supports dict operations
          supports string operations
        Exception Handling
          catches Python exceptions
          propagates exceptions correctly
          handles custom exceptions
          manages exception hierarchy
          supports finally blocks
          handles exception chaining
        Type System
          handles dynamic typing
          supports type introspection
          manages duck typing
          handles type conversion
          supports operator overloading
          manages method resolution order
      Go Runtime Tests
        Basic Runtime Operations
          initializes Go runtime correctly
          executes basic Go code
          handles Go variables and types
        Memory Management
          manages Go garbage collection
          handles Go memory allocation
        Concurrency Support
          handles Go goroutines
          handles Go channels
        Error Handling
          handles Go error types
          handles Go panic and recover
        Foreign Function Interface
          handles Go Cgo integration
          handles Go system calls
    Utilities
      Pretty Printer
        Basic Pretty Printing
          pretty prints text
          pretty prints integers
          pretty prints doubles
          pretty prints booleans
          handles empty documents
          concatenates documents vertically
        Document Rendering
          renders documents to text
          renders compact documents
          handles quotes
          handles double quotes
        Color and Styling
          applies red color
          applies green color
          applies blue color
          applies yellow color
          applies underline style
        Property-Based Tests
          text rendering preserves content
            +++ OK, passed 100 tests; 14 discarded.
          empty document renders to empty text
          vertical composition creates multi-line output
          pretty instances work for common types
      Graph Utilities
        Graph Construction
          creates empty graph
          adds nodes to graph
          adds edges to graph
          removes nodes from graph
          removes edges from graph
        Graph Traversal
          finds reachable nodes
          finds paths between nodes
          finds shortest path
          handles disconnected components
        Cycle Detection
          detects strongly connected components
          detects acyclic graph structure
          handles empty graph
          handles single node
        Topological Sort
          performs topological sort on DAG
          detects cyclic graph
          handles empty graph
          handles single node
          handles linear chain
        Property-Based Tests
          adding node increases size
            +++ OK, passed 100 tests.
          graph size is always non-negative
          adding edge maintains connectivity
          topological sort of empty graph succeeds
  Integration Tests
    Integration Tests
      Python to C++ Integration
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--78f7692dd4bb3589/test.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        compiles simple Python function to C++
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--6ec140b2e75abec2/calculator.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        compiles Python class to C++
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--f58bcf4d1e44e4d1/factorial.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        compiles Python with control flow to C++
      Go to C++ Integration
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--ec7886cb0e706ae6/test.go.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        compiles simple Go function to C++
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--20a0fd58e8e0701d/person.go.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        compiles Go struct to C++ class
      End-to-End Tests
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--5e73ba29b8b16085/main.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        compiles and runs generated C++ code
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
        handles compilation errors gracefully
[INFO] Compiler environment setup completed
[INFO] Compiling project with 2 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--2dd7e7a1f9a9c145/util.py.cpp
[INFO] Compiling 1 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-test--2dd7e7a1f9a9c145/main.py.cpp
[INFO] Code generation completed for all files
        processes multiple input files
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-mixed-test--5d11518424cc2047/code.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-mixed-test--5d11518424cc2047/code.go.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        handles mixed Python and Go projects
[INFO] Compiler environment setup completed
[INFO] Compiling project with 3 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-import-test--3728a575c9b8c95d/module_a.py.cpp
[INFO] Compiling 2 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-import-test--3728a575c9b8c95d/module_b.py.cpp
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-import-test--3728a575c9b8c95d/module_c.py.cpp
[INFO] Code generation completed for all files
        handles complex import chains
[INFO] Compiler environment setup completed
[INFO] Compiling project with 2 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-circular-test--d23652a293baa93c/module_a.py.cpp
[INFO] Compiling 1 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-circular-test--d23652a293baa93c/module_b.py.cpp
[INFO] Code generation completed for all files
        handles circular dependencies with fallback
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-external-test--a20e0d1f5657f010/external.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
        integrates with external libraries
[INFO] Compiler environment setup completed
[INFO] Compiling project with 3 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-large-integration-test--3148096f3ff47b37/utils.py.cpp
[INFO] Compiling 2 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-large-integration-test--3148096f3ff47b37/calculator.py.cpp
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-large-integration-test--3148096f3ff47b37/main.py.cpp
[INFO] Code generation completed for all files
        handles large-scale integration
  End-to-End Tests
    End-to-End Production Tests
      Production Compilation Tests
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-test--ddffcbdff64f5a86/app.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-test--ddffcbdff64f5a86/app.cpp
        compiles real-world Python application to C++
[INFO] Compiler environment setup completed
[INFO] Compiling project with 2 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--0ab1376a4219a125/main.go.cpp
[INFO] Compiling 1 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--0ab1376a4219a125/utils.go.cpp
[INFO] Code generation completed for all files
[INFO] Compiling project with 2 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--0ab1376a4219a125/main.go.cpp
[INFO] Compiling 1 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--0ab1376a4219a125/utils.go.cpp
[INFO] Code generation completed for all files
        compiles multi-file Go project to C++
      Production Compilation Tests
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-test--a78db96d77044f8d/app.py.cpp
[INFO] Compiling 0 files sequentially
[INFO] Code generation completed for all files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-test--a78db96d77044f8d/app.cpp
        compiles real-world Python application to C++
[INFO] Compiler environment setup completed
[INFO] Compiling project with 2 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--3f695a9fbbb56db6/main.go.cpp
[INFO] Compiling 1 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--3f695a9fbbb56db6/utils.go.cpp
[INFO] Code generation completed for all files
[INFO] Compiling project with 2 files
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--3f695a9fbbb56db6/main.go.cpp
[INFO] Compiling 1 files sequentially
[INFO] Phase: code-generation
[INFO] Code generation completed: /tmp/fluxus-e2e-go-test--3f695a9fbbb56db6/utils.go.cpp
[INFO] Code generation completed for all files
        compiles multi-file Go project to C++
    Python golden end-to-end suite (via Node runner)
      runs test/test-runner.js and succeeds
  Command Tests
    Fluxus Convert Command Tests
Fluxus convert exit code: ExitSuccess
Fluxus convert stdout: Found 1 source files to compile
[INFO] Compiler environment setup completed
[INFO] Compiling project with 1 files
[INFO] Processing file: test/python-tests/basic_arithmetic.py
[INFO] Phase: parsing
[INFO] Phase: type-inference
[INFO] Running type inference analysis
[INFO] Type inference completed successfully
[INFO] Phase: optimization
[INFO] Running optimizations at level O2
[INFO] Phase: code-generation
[INFO] Phase: c++-compilation
[INFO] Successfully compiled: test/python-tests/basic_arithmetic.py
[INFO] Compiling 0 files sequentially
[INFO] Phase: final-linking
[INFO] Cleaned up intermediate files
[INFO] Project compilation completed: test/python-testsoutput
[INFO] Compiler environment setup completed
[INFO] Processing file: test/python-tests/basic_arithmetic.py
[INFO] Phase: parsing
[INFO] Phase: type-inference
[INFO] Running type inference analysis
[INFO] Type inference completed successfully
[INFO] Phase: optimization
[INFO] Running optimizations at level O2
[INFO] Phase: code-generation
[INFO] Phase: c++-compilation
[INFO] Phase: linking
[INFO] Successfully compiled: test/python-tests/basic_arithmetic.py
Compilation successful!
Output: test/python-testsoutput
=== Compilation Statistics ===
Files processed: 2
Total files: 1
Warnings: 0
Errors: 0
===============================

Fluxus convert stderr: 
      runs fluxus --python -2 convert without errors
      executes Python files and compares outputs with compiled executables

Failures:

  test/Test/Fluxus/Parser/GoSyntax.hs:29:24: 
  1) Fluxus Compiler Comprehensive Test Suite, Unit Tests, Parsers, Go Comprehensive Syntax Coverage, parses all Go examples in test/go250923
       Parser failed for test/go250923/design_patterns.go: ParseErrorBundle {bundleErrors = TrivialError 53 (Just (Tokens (Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 21}, spanEnd = Position {posLine = 18, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen} :| []))) (fromList []) :| [], bundlePosState = PosState {pstateInput = [Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 1, posColumn = 1}, spanEnd = Position {posLine = 1, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwPackage},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 1, posColumn = 9}, spanEnd = Position {posLine = 1, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "main"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 1, posColumn = 13}, spanEnd = Position {posLine = 2, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 2, posColumn = 1}, spanEnd = Position {posLine = 3, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 3, posColumn = 1}, spanEnd = Position {posLine = 3, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwImport},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 3, posColumn = 8}, spanEnd = Position {posLine = 3, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 3, posColumn = 9}, spanEnd = Position {posLine = 4, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 4, posColumn = 9}, spanEnd = Position {posLine = 4, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 4, posColumn = 14}, spanEnd = Position {posLine = 5, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 5, posColumn = 9}, spanEnd = Position {posLine = 5, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "sync"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 5, posColumn = 15}, spanEnd = Position {posLine = 6, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 6, posColumn = 1}, spanEnd = Position {posLine = 6, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 6, posColumn = 2}, spanEnd = Position {posLine = 7, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 7, posColumn = 1}, spanEnd = Position {posLine = 8, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 8, posColumn = 1}, spanEnd = Position {posLine = 8, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 8, posColumn = 6}, spanEnd = Position {posLine = 8, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Singleton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 8, posColumn = 16}, spanEnd = Position {posLine = 8, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 8, posColumn = 23}, spanEnd = Position {posLine = 8, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 8, posColumn = 24}, spanEnd = Position {posLine = 9, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 9, posColumn = 9}, spanEnd = Position {posLine = 9, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 9, posColumn = 14}, spanEnd = Position {posLine = 9, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 9, posColumn = 20}, spanEnd = Position {posLine = 10, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 10, posColumn = 1}, spanEnd = Position {posLine = 10, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 10, posColumn = 2}, spanEnd = Position {posLine = 11, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 11, posColumn = 1}, spanEnd = Position {posLine = 12, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 12, posColumn = 1}, spanEnd = Position {posLine = 12, posColumn = 4}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwVar},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 12, posColumn = 5}, spanEnd = Position {posLine = 12, posColumn = 6}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 12, posColumn = 6}, spanEnd = Position {posLine = 13, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 13, posColumn = 9}, spanEnd = Position {posLine = 13, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "instance"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 13, posColumn = 18}, spanEnd = Position {posLine = 13, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 13, posColumn = 19}, spanEnd = Position {posLine = 13, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Singleton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 13, posColumn = 28}, spanEnd = Position {posLine = 14, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 14, posColumn = 9}, spanEnd = Position {posLine = 14, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "once"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 14, posColumn = 18}, spanEnd = Position {posLine = 14, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "sync"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 14, posColumn = 22}, spanEnd = Position {posLine = 14, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 14, posColumn = 23}, spanEnd = Position {posLine = 14, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Once"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 14, posColumn = 27}, spanEnd = Position {posLine = 15, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 15, posColumn = 1}, spanEnd = Position {posLine = 15, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 15, posColumn = 2}, spanEnd = Position {posLine = 16, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 16, posColumn = 1}, spanEnd = Position {posLine = 17, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 1}, spanEnd = Position {posLine = 17, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 6}, spanEnd = Position {posLine = 17, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetInstance"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 17}, spanEnd = Position {posLine = 17, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 18}, spanEnd = Position {posLine = 17, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 20}, spanEnd = Position {posLine = 17, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 21}, spanEnd = Position {posLine = 17, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Singleton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 31}, spanEnd = Position {posLine = 17, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 17, posColumn = 32}, spanEnd = Position {posLine = 18, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 9}, spanEnd = Position {posLine = 18, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "once"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 13}, spanEnd = Position {posLine = 18, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 14}, spanEnd = Position {posLine = 18, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Do"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 16}, spanEnd = Position {posLine = 18, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 17}, spanEnd = Position {posLine = 18, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 21}, spanEnd = Position {posLine = 18, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 22}, spanEnd = Position {posLine = 18, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 24}, spanEnd = Position {posLine = 18, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 18, posColumn = 25}, spanEnd = Position {posLine = 19, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 17}, spanEnd = Position {posLine = 19, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "instance"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 26}, spanEnd = Position {posLine = 19, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 28}, spanEnd = Position {posLine = 19, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 29}, spanEnd = Position {posLine = 19, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Singleton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 38}, spanEnd = Position {posLine = 19, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 39}, spanEnd = Position {posLine = 19, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 43}, spanEnd = Position {posLine = 19, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 45}, spanEnd = Position {posLine = 19, posColumn = 73}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Singleton instance created"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 73}, spanEnd = Position {posLine = 19, posColumn = 74}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 19, posColumn = 74}, spanEnd = Position {posLine = 20, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 20, posColumn = 9}, spanEnd = Position {posLine = 20, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 20, posColumn = 10}, spanEnd = Position {posLine = 20, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 20, posColumn = 11}, spanEnd = Position {posLine = 21, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 21, posColumn = 9}, spanEnd = Position {posLine = 21, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 21, posColumn = 16}, spanEnd = Position {posLine = 21, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "instance"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 21, posColumn = 24}, spanEnd = Position {posLine = 22, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 22, posColumn = 1}, spanEnd = Position {posLine = 22, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 22, posColumn = 2}, spanEnd = Position {posLine = 23, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 23, posColumn = 1}, spanEnd = Position {posLine = 24, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 24, posColumn = 1}, spanEnd = Position {posLine = 24, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 24, posColumn = 6}, spanEnd = Position {posLine = 24, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ShapeFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 24, posColumn = 19}, spanEnd = Position {posLine = 24, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 24, posColumn = 29}, spanEnd = Position {posLine = 24, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 24, posColumn = 30}, spanEnd = Position {posLine = 25, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 25, posColumn = 9}, spanEnd = Position {posLine = 25, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreateShape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 25, posColumn = 20}, spanEnd = Position {posLine = 25, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 25, posColumn = 21}, spanEnd = Position {posLine = 25, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 25, posColumn = 23}, spanEnd = Position {posLine = 25, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 25, posColumn = 28}, spanEnd = Position {posLine = 26, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 26, posColumn = 1}, spanEnd = Position {posLine = 26, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 26, posColumn = 2}, spanEnd = Position {posLine = 27, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 27, posColumn = 1}, spanEnd = Position {posLine = 28, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 28, posColumn = 1}, spanEnd = Position {posLine = 28, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 28, posColumn = 6}, spanEnd = Position {posLine = 28, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CircleFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 28, posColumn = 20}, spanEnd = Position {posLine = 28, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 28, posColumn = 26}, spanEnd = Position {posLine = 28, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 28, posColumn = 27}, spanEnd = Position {posLine = 28, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 28, posColumn = 28}, spanEnd = Position {posLine = 29, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 29, posColumn = 1}, spanEnd = Position {posLine = 30, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 1}, spanEnd = Position {posLine = 30, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 6}, spanEnd = Position {posLine = 30, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 7}, spanEnd = Position {posLine = 30, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "f"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 9}, spanEnd = Position {posLine = 30, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 10}, spanEnd = Position {posLine = 30, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CircleFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 23}, spanEnd = Position {posLine = 30, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 25}, spanEnd = Position {posLine = 30, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreateShape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 36}, spanEnd = Position {posLine = 30, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 37}, spanEnd = Position {posLine = 30, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 39}, spanEnd = Position {posLine = 30, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 45}, spanEnd = Position {posLine = 30, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 30, posColumn = 46}, spanEnd = Position {posLine = 31, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 9}, spanEnd = Position {posLine = 31, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 16}, spanEnd = Position {posLine = 31, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Circle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 22}, spanEnd = Position {posLine = 31, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 23}, spanEnd = Position {posLine = 31, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "radius"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 29}, spanEnd = Position {posLine = 31, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 31}, spanEnd = Position {posLine = 31, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "5"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 32}, spanEnd = Position {posLine = 31, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 31, posColumn = 33}, spanEnd = Position {posLine = 32, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 32, posColumn = 1}, spanEnd = Position {posLine = 32, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 32, posColumn = 2}, spanEnd = Position {posLine = 33, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 33, posColumn = 1}, spanEnd = Position {posLine = 34, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 34, posColumn = 1}, spanEnd = Position {posLine = 34, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 34, posColumn = 6}, spanEnd = Position {posLine = 34, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RectangleFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 34, posColumn = 23}, spanEnd = Position {posLine = 34, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 34, posColumn = 29}, spanEnd = Position {posLine = 34, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 34, posColumn = 30}, spanEnd = Position {posLine = 34, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 34, posColumn = 31}, spanEnd = Position {posLine = 35, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 35, posColumn = 1}, spanEnd = Position {posLine = 36, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 1}, spanEnd = Position {posLine = 36, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 6}, spanEnd = Position {posLine = 36, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 7}, spanEnd = Position {posLine = 36, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "f"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 9}, spanEnd = Position {posLine = 36, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 10}, spanEnd = Position {posLine = 36, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RectangleFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 26}, spanEnd = Position {posLine = 36, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 28}, spanEnd = Position {posLine = 36, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreateShape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 39}, spanEnd = Position {posLine = 36, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 40}, spanEnd = Position {posLine = 36, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 42}, spanEnd = Position {posLine = 36, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 48}, spanEnd = Position {posLine = 36, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 36, posColumn = 49}, spanEnd = Position {posLine = 37, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 9}, spanEnd = Position {posLine = 37, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 16}, spanEnd = Position {posLine = 37, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Rectangle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 25}, spanEnd = Position {posLine = 37, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 26}, spanEnd = Position {posLine = 37, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "width"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 31}, spanEnd = Position {posLine = 37, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 33}, spanEnd = Position {posLine = 37, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "4"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 34}, spanEnd = Position {posLine = 37, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 36}, spanEnd = Position {posLine = 37, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "height"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 42}, spanEnd = Position {posLine = 37, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 44}, spanEnd = Position {posLine = 37, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "6"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 45}, spanEnd = Position {posLine = 37, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 37, posColumn = 46}, spanEnd = Position {posLine = 38, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 38, posColumn = 1}, spanEnd = Position {posLine = 38, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 38, posColumn = 2}, spanEnd = Position {posLine = 39, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 39, posColumn = 1}, spanEnd = Position {posLine = 40, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 40, posColumn = 1}, spanEnd = Position {posLine = 40, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 40, posColumn = 6}, spanEnd = Position {posLine = 40, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 40, posColumn = 12}, spanEnd = Position {posLine = 40, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 40, posColumn = 22}, spanEnd = Position {posLine = 40, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 40, posColumn = 23}, spanEnd = Position {posLine = 41, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 41, posColumn = 9}, spanEnd = Position {posLine = 41, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Draw"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 41, posColumn = 13}, spanEnd = Position {posLine = 41, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 41, posColumn = 14}, spanEnd = Position {posLine = 41, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 41, posColumn = 16}, spanEnd = Position {posLine = 41, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 41, posColumn = 22}, spanEnd = Position {posLine = 42, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 42, posColumn = 9}, spanEnd = Position {posLine = 42, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetArea"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 42, posColumn = 16}, spanEnd = Position {posLine = 42, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 42, posColumn = 17}, spanEnd = Position {posLine = 42, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 42, posColumn = 19}, spanEnd = Position {posLine = 42, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 42, posColumn = 26}, spanEnd = Position {posLine = 43, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 43, posColumn = 1}, spanEnd = Position {posLine = 43, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 43, posColumn = 2}, spanEnd = Position {posLine = 44, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 44, posColumn = 1}, spanEnd = Position {posLine = 45, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 45, posColumn = 1}, spanEnd = Position {posLine = 45, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 45, posColumn = 6}, spanEnd = Position {posLine = 45, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Circle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 45, posColumn = 13}, spanEnd = Position {posLine = 45, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 45, posColumn = 20}, spanEnd = Position {posLine = 45, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 45, posColumn = 21}, spanEnd = Position {posLine = 46, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 46, posColumn = 9}, spanEnd = Position {posLine = 46, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "radius"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 46, posColumn = 16}, spanEnd = Position {posLine = 46, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 46, posColumn = 23}, spanEnd = Position {posLine = 47, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 47, posColumn = 1}, spanEnd = Position {posLine = 47, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 47, posColumn = 2}, spanEnd = Position {posLine = 48, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 48, posColumn = 1}, spanEnd = Position {posLine = 49, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 1}, spanEnd = Position {posLine = 49, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 6}, spanEnd = Position {posLine = 49, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 7}, spanEnd = Position {posLine = 49, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 9}, spanEnd = Position {posLine = 49, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Circle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 15}, spanEnd = Position {posLine = 49, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 17}, spanEnd = Position {posLine = 49, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Draw"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 21}, spanEnd = Position {posLine = 49, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 22}, spanEnd = Position {posLine = 49, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 24}, spanEnd = Position {posLine = 49, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 31}, spanEnd = Position {posLine = 49, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 49, posColumn = 32}, spanEnd = Position {posLine = 50, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 9}, spanEnd = Position {posLine = 50, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 16}, spanEnd = Position {posLine = 50, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 19}, spanEnd = Position {posLine = 50, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 20}, spanEnd = Position {posLine = 50, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Sprintf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 27}, spanEnd = Position {posLine = 50, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 28}, spanEnd = Position {posLine = 50, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Drawing circle with radius: %.2f"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 62}, spanEnd = Position {posLine = 50, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 64}, spanEnd = Position {posLine = 50, posColumn = 65}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 65}, spanEnd = Position {posLine = 50, posColumn = 66}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 66}, spanEnd = Position {posLine = 50, posColumn = 72}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "radius"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 72}, spanEnd = Position {posLine = 50, posColumn = 73}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 50, posColumn = 73}, spanEnd = Position {posLine = 51, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 51, posColumn = 1}, spanEnd = Position {posLine = 51, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 51, posColumn = 2}, spanEnd = Position {posLine = 52, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 52, posColumn = 1}, spanEnd = Position {posLine = 53, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 1}, spanEnd = Position {posLine = 53, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 6}, spanEnd = Position {posLine = 53, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 7}, spanEnd = Position {posLine = 53, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 9}, spanEnd = Position {posLine = 53, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Circle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 15}, spanEnd = Position {posLine = 53, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 17}, spanEnd = Position {posLine = 53, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetArea"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 24}, spanEnd = Position {posLine = 53, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 25}, spanEnd = Position {posLine = 53, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 27}, spanEnd = Position {posLine = 53, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 35}, spanEnd = Position {posLine = 53, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 53, posColumn = 36}, spanEnd = Position {posLine = 54, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 9}, spanEnd = Position {posLine = 54, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 16}, spanEnd = Position {posLine = 54, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenFloat "3.14159"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 24}, spanEnd = Position {posLine = 54, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 26}, spanEnd = Position {posLine = 54, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 27}, spanEnd = Position {posLine = 54, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 28}, spanEnd = Position {posLine = 54, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "radius"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 35}, spanEnd = Position {posLine = 54, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 37}, spanEnd = Position {posLine = 54, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 38}, spanEnd = Position {posLine = 54, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 39}, spanEnd = Position {posLine = 54, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "radius"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 54, posColumn = 45}, spanEnd = Position {posLine = 55, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 55, posColumn = 1}, spanEnd = Position {posLine = 55, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 55, posColumn = 2}, spanEnd = Position {posLine = 56, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 56, posColumn = 1}, spanEnd = Position {posLine = 57, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 57, posColumn = 1}, spanEnd = Position {posLine = 57, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 57, posColumn = 6}, spanEnd = Position {posLine = 57, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Rectangle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 57, posColumn = 16}, spanEnd = Position {posLine = 57, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 57, posColumn = 23}, spanEnd = Position {posLine = 57, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 57, posColumn = 24}, spanEnd = Position {posLine = 58, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 58, posColumn = 9}, spanEnd = Position {posLine = 58, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "width"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 58, posColumn = 14}, spanEnd = Position {posLine = 58, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 58, posColumn = 16}, spanEnd = Position {posLine = 58, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "height"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 58, posColumn = 23}, spanEnd = Position {posLine = 58, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 58, posColumn = 30}, spanEnd = Position {posLine = 59, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 59, posColumn = 1}, spanEnd = Position {posLine = 59, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 59, posColumn = 2}, spanEnd = Position {posLine = 60, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 60, posColumn = 1}, spanEnd = Position {posLine = 61, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 1}, spanEnd = Position {posLine = 61, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 6}, spanEnd = Position {posLine = 61, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 7}, spanEnd = Position {posLine = 61, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "r"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 9}, spanEnd = Position {posLine = 61, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Rectangle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 18}, spanEnd = Position {posLine = 61, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 20}, spanEnd = Position {posLine = 61, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Draw"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 24}, spanEnd = Position {posLine = 61, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 25}, spanEnd = Position {posLine = 61, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 27}, spanEnd = Position {posLine = 61, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 34}, spanEnd = Position {posLine = 61, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 61, posColumn = 35}, spanEnd = Position {posLine = 62, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 9}, spanEnd = Position {posLine = 62, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 16}, spanEnd = Position {posLine = 62, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 19}, spanEnd = Position {posLine = 62, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 20}, spanEnd = Position {posLine = 62, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Sprintf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 27}, spanEnd = Position {posLine = 62, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 28}, spanEnd = Position {posLine = 62, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Drawing rectangle with width: %.2f, height: %.2f"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 78}, spanEnd = Position {posLine = 62, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 80}, spanEnd = Position {posLine = 62, posColumn = 81}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "r"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 81}, spanEnd = Position {posLine = 62, posColumn = 82}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 82}, spanEnd = Position {posLine = 62, posColumn = 87}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "width"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 87}, spanEnd = Position {posLine = 62, posColumn = 88}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 89}, spanEnd = Position {posLine = 62, posColumn = 90}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "r"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 90}, spanEnd = Position {posLine = 62, posColumn = 91}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 91}, spanEnd = Position {posLine = 62, posColumn = 97}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "height"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 97}, spanEnd = Position {posLine = 62, posColumn = 98}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 62, posColumn = 98}, spanEnd = Position {posLine = 63, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 63, posColumn = 1}, spanEnd = Position {posLine = 63, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 63, posColumn = 2}, spanEnd = Position {posLine = 64, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 64, posColumn = 1}, spanEnd = Position {posLine = 65, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 1}, spanEnd = Position {posLine = 65, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 6}, spanEnd = Position {posLine = 65, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 7}, spanEnd = Position {posLine = 65, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "r"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 9}, spanEnd = Position {posLine = 65, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Rectangle"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 18}, spanEnd = Position {posLine = 65, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 20}, spanEnd = Position {posLine = 65, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetArea"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 27}, spanEnd = Position {posLine = 65, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 28}, spanEnd = Position {posLine = 65, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 30}, spanEnd = Position {posLine = 65, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 38}, spanEnd = Position {posLine = 65, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 65, posColumn = 39}, spanEnd = Position {posLine = 66, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 9}, spanEnd = Position {posLine = 66, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 16}, spanEnd = Position {posLine = 66, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "r"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 17}, spanEnd = Position {posLine = 66, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 18}, spanEnd = Position {posLine = 66, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "width"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 24}, spanEnd = Position {posLine = 66, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 26}, spanEnd = Position {posLine = 66, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "r"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 27}, spanEnd = Position {posLine = 66, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 28}, spanEnd = Position {posLine = 66, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "height"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 66, posColumn = 34}, spanEnd = Position {posLine = 67, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 67, posColumn = 1}, spanEnd = Position {posLine = 67, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 67, posColumn = 2}, spanEnd = Position {posLine = 68, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 68, posColumn = 1}, spanEnd = Position {posLine = 69, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 69, posColumn = 1}, spanEnd = Position {posLine = 69, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 69, posColumn = 6}, spanEnd = Position {posLine = 69, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Subject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 69, posColumn = 14}, spanEnd = Position {posLine = 69, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 69, posColumn = 24}, spanEnd = Position {posLine = 69, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 69, posColumn = 25}, spanEnd = Position {posLine = 70, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 70, posColumn = 9}, spanEnd = Position {posLine = 70, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RegisterObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 70, posColumn = 25}, spanEnd = Position {posLine = 70, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 70, posColumn = 26}, spanEnd = Position {posLine = 70, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 70, posColumn = 35}, spanEnd = Position {posLine = 70, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 70, posColumn = 43}, spanEnd = Position {posLine = 70, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 70, posColumn = 44}, spanEnd = Position {posLine = 71, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 71, posColumn = 9}, spanEnd = Position {posLine = 71, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoveObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 71, posColumn = 23}, spanEnd = Position {posLine = 71, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 71, posColumn = 24}, spanEnd = Position {posLine = 71, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 71, posColumn = 33}, spanEnd = Position {posLine = 71, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 71, posColumn = 41}, spanEnd = Position {posLine = 71, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 71, posColumn = 42}, spanEnd = Position {posLine = 72, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 72, posColumn = 9}, spanEnd = Position {posLine = 72, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "NotifyObservers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 72, posColumn = 24}, spanEnd = Position {posLine = 72, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 72, posColumn = 25}, spanEnd = Position {posLine = 72, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 72, posColumn = 26}, spanEnd = Position {posLine = 73, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 73, posColumn = 1}, spanEnd = Position {posLine = 73, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 73, posColumn = 2}, spanEnd = Position {posLine = 74, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 74, posColumn = 1}, spanEnd = Position {posLine = 75, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 75, posColumn = 1}, spanEnd = Position {posLine = 75, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 75, posColumn = 6}, spanEnd = Position {posLine = 75, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 75, posColumn = 15}, spanEnd = Position {posLine = 75, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 75, posColumn = 25}, spanEnd = Position {posLine = 75, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 75, posColumn = 26}, spanEnd = Position {posLine = 76, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 76, posColumn = 9}, spanEnd = Position {posLine = 76, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Update"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 76, posColumn = 15}, spanEnd = Position {posLine = 76, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 76, posColumn = 16}, spanEnd = Position {posLine = 76, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 76, posColumn = 24}, spanEnd = Position {posLine = 76, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 76, posColumn = 30}, spanEnd = Position {posLine = 76, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 76, posColumn = 31}, spanEnd = Position {posLine = 77, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 77, posColumn = 1}, spanEnd = Position {posLine = 77, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 77, posColumn = 2}, spanEnd = Position {posLine = 78, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 78, posColumn = 1}, spanEnd = Position {posLine = 79, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 79, posColumn = 1}, spanEnd = Position {posLine = 79, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 79, posColumn = 6}, spanEnd = Position {posLine = 79, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "WeatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 79, posColumn = 21}, spanEnd = Position {posLine = 79, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 79, posColumn = 28}, spanEnd = Position {posLine = 79, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 79, posColumn = 29}, spanEnd = Position {posLine = 80, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 80, posColumn = 9}, spanEnd = Position {posLine = 80, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 80, posColumn = 19}, spanEnd = Position {posLine = 80, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 80, posColumn = 20}, spanEnd = Position {posLine = 80, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 80, posColumn = 21}, spanEnd = Position {posLine = 80, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 80, posColumn = 29}, spanEnd = Position {posLine = 81, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 81, posColumn = 9}, spanEnd = Position {posLine = 81, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "temperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 81, posColumn = 21}, spanEnd = Position {posLine = 81, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 81, posColumn = 28}, spanEnd = Position {posLine = 82, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 82, posColumn = 1}, spanEnd = Position {posLine = 82, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 82, posColumn = 2}, spanEnd = Position {posLine = 83, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 83, posColumn = 1}, spanEnd = Position {posLine = 84, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 1}, spanEnd = Position {posLine = 84, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 6}, spanEnd = Position {posLine = 84, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 7}, spanEnd = Position {posLine = 84, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 10}, spanEnd = Position {posLine = 84, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 11}, spanEnd = Position {posLine = 84, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "WeatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 25}, spanEnd = Position {posLine = 84, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 27}, spanEnd = Position {posLine = 84, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RegisterObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 43}, spanEnd = Position {posLine = 84, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 44}, spanEnd = Position {posLine = 84, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 53}, spanEnd = Position {posLine = 84, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 61}, spanEnd = Position {posLine = 84, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 63}, spanEnd = Position {posLine = 84, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 84, posColumn = 64}, spanEnd = Position {posLine = 85, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 9}, spanEnd = Position {posLine = 85, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 11}, spanEnd = Position {posLine = 85, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 12}, spanEnd = Position {posLine = 85, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 22}, spanEnd = Position {posLine = 85, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 24}, spanEnd = Position {posLine = 85, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "append"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 30}, spanEnd = Position {posLine = 85, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 31}, spanEnd = Position {posLine = 85, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 33}, spanEnd = Position {posLine = 85, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 34}, spanEnd = Position {posLine = 85, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 43}, spanEnd = Position {posLine = 85, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 45}, spanEnd = Position {posLine = 85, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 53}, spanEnd = Position {posLine = 85, posColumn = 54}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 85, posColumn = 54}, spanEnd = Position {posLine = 86, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 86, posColumn = 1}, spanEnd = Position {posLine = 86, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 86, posColumn = 2}, spanEnd = Position {posLine = 87, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 87, posColumn = 1}, spanEnd = Position {posLine = 88, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 1}, spanEnd = Position {posLine = 88, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 6}, spanEnd = Position {posLine = 88, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 7}, spanEnd = Position {posLine = 88, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 10}, spanEnd = Position {posLine = 88, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 11}, spanEnd = Position {posLine = 88, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "WeatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 25}, spanEnd = Position {posLine = 88, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 27}, spanEnd = Position {posLine = 88, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoveObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 41}, spanEnd = Position {posLine = 88, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 42}, spanEnd = Position {posLine = 88, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 51}, spanEnd = Position {posLine = 88, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 59}, spanEnd = Position {posLine = 88, posColumn = 60}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 61}, spanEnd = Position {posLine = 88, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 88, posColumn = 62}, spanEnd = Position {posLine = 89, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 9}, spanEnd = Position {posLine = 89, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFor},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 13}, spanEnd = Position {posLine = 89, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 14}, spanEnd = Position {posLine = 89, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 16}, spanEnd = Position {posLine = 89, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obs"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 20}, spanEnd = Position {posLine = 89, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 23}, spanEnd = Position {posLine = 89, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwRange},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 29}, spanEnd = Position {posLine = 89, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 31}, spanEnd = Position {posLine = 89, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 32}, spanEnd = Position {posLine = 89, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 42}, spanEnd = Position {posLine = 89, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 89, posColumn = 43}, spanEnd = Position {posLine = 90, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 90, posColumn = 17}, spanEnd = Position {posLine = 90, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwIf},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 90, posColumn = 20}, spanEnd = Position {posLine = 90, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obs"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 90, posColumn = 24}, spanEnd = Position {posLine = 90, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpEq},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 90, posColumn = 27}, spanEnd = Position {posLine = 90, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 90, posColumn = 36}, spanEnd = Position {posLine = 90, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 90, posColumn = 37}, spanEnd = Position {posLine = 91, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 25}, spanEnd = Position {posLine = 91, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 27}, spanEnd = Position {posLine = 91, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 28}, spanEnd = Position {posLine = 91, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 38}, spanEnd = Position {posLine = 91, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 40}, spanEnd = Position {posLine = 91, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "append"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 46}, spanEnd = Position {posLine = 91, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 47}, spanEnd = Position {posLine = 91, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 49}, spanEnd = Position {posLine = 91, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 50}, spanEnd = Position {posLine = 91, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 59}, spanEnd = Position {posLine = 91, posColumn = 60}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 60}, spanEnd = Position {posLine = 91, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 61}, spanEnd = Position {posLine = 91, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 62}, spanEnd = Position {posLine = 91, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 63}, spanEnd = Position {posLine = 91, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 65}, spanEnd = Position {posLine = 91, posColumn = 67}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 67}, spanEnd = Position {posLine = 91, posColumn = 68}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 68}, spanEnd = Position {posLine = 91, posColumn = 77}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 77}, spanEnd = Position {posLine = 91, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 78}, spanEnd = Position {posLine = 91, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 79}, spanEnd = Position {posLine = 91, posColumn = 80}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpPlus},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 80}, spanEnd = Position {posLine = 91, posColumn = 81}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 81}, spanEnd = Position {posLine = 91, posColumn = 82}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 82}, spanEnd = Position {posLine = 91, posColumn = 83}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 83}, spanEnd = Position {posLine = 91, posColumn = 86}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpEllipsis},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 86}, spanEnd = Position {posLine = 91, posColumn = 87}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 91, posColumn = 87}, spanEnd = Position {posLine = 92, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 92, posColumn = 25}, spanEnd = Position {posLine = 92, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwBreak},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 92, posColumn = 30}, spanEnd = Position {posLine = 93, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 93, posColumn = 17}, spanEnd = Position {posLine = 93, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 93, posColumn = 18}, spanEnd = Position {posLine = 94, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 94, posColumn = 9}, spanEnd = Position {posLine = 94, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 94, posColumn = 10}, spanEnd = Position {posLine = 95, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 95, posColumn = 1}, spanEnd = Position {posLine = 95, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 95, posColumn = 2}, spanEnd = Position {posLine = 96, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 96, posColumn = 1}, spanEnd = Position {posLine = 97, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 1}, spanEnd = Position {posLine = 97, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 6}, spanEnd = Position {posLine = 97, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 7}, spanEnd = Position {posLine = 97, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 10}, spanEnd = Position {posLine = 97, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 11}, spanEnd = Position {posLine = 97, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "WeatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 25}, spanEnd = Position {posLine = 97, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 27}, spanEnd = Position {posLine = 97, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "NotifyObservers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 42}, spanEnd = Position {posLine = 97, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 43}, spanEnd = Position {posLine = 97, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 45}, spanEnd = Position {posLine = 97, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 97, posColumn = 46}, spanEnd = Position {posLine = 98, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 9}, spanEnd = Position {posLine = 98, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFor},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 13}, spanEnd = Position {posLine = 98, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "_"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 14}, spanEnd = Position {posLine = 98, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 16}, spanEnd = Position {posLine = 98, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 25}, spanEnd = Position {posLine = 98, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 28}, spanEnd = Position {posLine = 98, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwRange},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 34}, spanEnd = Position {posLine = 98, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 36}, spanEnd = Position {posLine = 98, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 37}, spanEnd = Position {posLine = 98, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 47}, spanEnd = Position {posLine = 98, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 98, posColumn = 48}, spanEnd = Position {posLine = 99, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 17}, spanEnd = Position {posLine = 99, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "observer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 25}, spanEnd = Position {posLine = 99, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 26}, spanEnd = Position {posLine = 99, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Update"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 32}, spanEnd = Position {posLine = 99, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 33}, spanEnd = Position {posLine = 99, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 36}, spanEnd = Position {posLine = 99, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 37}, spanEnd = Position {posLine = 99, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Sprintf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 44}, spanEnd = Position {posLine = 99, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 45}, spanEnd = Position {posLine = 99, posColumn = 68}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Temperature is %.2f\176C"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 68}, spanEnd = Position {posLine = 99, posColumn = 69}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 70}, spanEnd = Position {posLine = 99, posColumn = 72}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 72}, spanEnd = Position {posLine = 99, posColumn = 73}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 73}, spanEnd = Position {posLine = 99, posColumn = 84}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "temperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 84}, spanEnd = Position {posLine = 99, posColumn = 85}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 85}, spanEnd = Position {posLine = 99, posColumn = 86}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 99, posColumn = 86}, spanEnd = Position {posLine = 100, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 100, posColumn = 9}, spanEnd = Position {posLine = 100, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 100, posColumn = 10}, spanEnd = Position {posLine = 101, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 101, posColumn = 1}, spanEnd = Position {posLine = 101, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 101, posColumn = 2}, spanEnd = Position {posLine = 102, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 102, posColumn = 1}, spanEnd = Position {posLine = 103, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 1}, spanEnd = Position {posLine = 103, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 6}, spanEnd = Position {posLine = 103, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 7}, spanEnd = Position {posLine = 103, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 10}, spanEnd = Position {posLine = 103, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 11}, spanEnd = Position {posLine = 103, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "WeatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 25}, spanEnd = Position {posLine = 103, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 27}, spanEnd = Position {posLine = 103, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetTemperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 41}, spanEnd = Position {posLine = 103, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 42}, spanEnd = Position {posLine = 103, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "temp"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 47}, spanEnd = Position {posLine = 103, posColumn = 54}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 54}, spanEnd = Position {posLine = 103, posColumn = 55}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 56}, spanEnd = Position {posLine = 103, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 103, posColumn = 57}, spanEnd = Position {posLine = 104, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 104, posColumn = 9}, spanEnd = Position {posLine = 104, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 104, posColumn = 11}, spanEnd = Position {posLine = 104, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 104, posColumn = 12}, spanEnd = Position {posLine = 104, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "temperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 104, posColumn = 24}, spanEnd = Position {posLine = 104, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 104, posColumn = 26}, spanEnd = Position {posLine = 104, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "temp"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 104, posColumn = 30}, spanEnd = Position {posLine = 105, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 9}, spanEnd = Position {posLine = 105, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 12}, spanEnd = Position {posLine = 105, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 13}, spanEnd = Position {posLine = 105, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 19}, spanEnd = Position {posLine = 105, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 20}, spanEnd = Position {posLine = 105, posColumn = 69}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "WeatherStation: Temperature updated to %.2f\176C\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 69}, spanEnd = Position {posLine = 105, posColumn = 70}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 71}, spanEnd = Position {posLine = 105, posColumn = 75}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "temp"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 75}, spanEnd = Position {posLine = 105, posColumn = 76}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 105, posColumn = 76}, spanEnd = Position {posLine = 106, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 106, posColumn = 9}, spanEnd = Position {posLine = 106, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ws"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 106, posColumn = 11}, spanEnd = Position {posLine = 106, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 106, posColumn = 12}, spanEnd = Position {posLine = 106, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "NotifyObservers"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 106, posColumn = 27}, spanEnd = Position {posLine = 106, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 106, posColumn = 28}, spanEnd = Position {posLine = 106, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 106, posColumn = 29}, spanEnd = Position {posLine = 107, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 107, posColumn = 1}, spanEnd = Position {posLine = 107, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 107, posColumn = 2}, spanEnd = Position {posLine = 108, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 108, posColumn = 1}, spanEnd = Position {posLine = 109, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 109, posColumn = 1}, spanEnd = Position {posLine = 109, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 109, posColumn = 6}, spanEnd = Position {posLine = 109, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PhoneDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 109, posColumn = 19}, spanEnd = Position {posLine = 109, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 109, posColumn = 26}, spanEnd = Position {posLine = 109, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 109, posColumn = 27}, spanEnd = Position {posLine = 110, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 110, posColumn = 9}, spanEnd = Position {posLine = 110, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "name"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 110, posColumn = 14}, spanEnd = Position {posLine = 110, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 110, posColumn = 20}, spanEnd = Position {posLine = 111, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 111, posColumn = 1}, spanEnd = Position {posLine = 111, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 111, posColumn = 2}, spanEnd = Position {posLine = 112, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 112, posColumn = 1}, spanEnd = Position {posLine = 113, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 1}, spanEnd = Position {posLine = 113, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 6}, spanEnd = Position {posLine = 113, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 7}, spanEnd = Position {posLine = 113, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pd"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 10}, spanEnd = Position {posLine = 113, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 11}, spanEnd = Position {posLine = 113, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PhoneDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 23}, spanEnd = Position {posLine = 113, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 25}, spanEnd = Position {posLine = 113, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Update"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 31}, spanEnd = Position {posLine = 113, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 32}, spanEnd = Position {posLine = 113, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 40}, spanEnd = Position {posLine = 113, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 46}, spanEnd = Position {posLine = 113, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 48}, spanEnd = Position {posLine = 113, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 113, posColumn = 49}, spanEnd = Position {posLine = 114, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 9}, spanEnd = Position {posLine = 114, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 12}, spanEnd = Position {posLine = 114, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 13}, spanEnd = Position {posLine = 114, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 19}, spanEnd = Position {posLine = 114, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 20}, spanEnd = Position {posLine = 114, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "%s Display: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 38}, spanEnd = Position {posLine = 114, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 40}, spanEnd = Position {posLine = 114, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pd"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 42}, spanEnd = Position {posLine = 114, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 43}, spanEnd = Position {posLine = 114, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "name"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 47}, spanEnd = Position {posLine = 114, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 49}, spanEnd = Position {posLine = 114, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 56}, spanEnd = Position {posLine = 114, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 114, posColumn = 57}, spanEnd = Position {posLine = 115, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 115, posColumn = 1}, spanEnd = Position {posLine = 115, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 115, posColumn = 2}, spanEnd = Position {posLine = 116, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 116, posColumn = 1}, spanEnd = Position {posLine = 117, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 117, posColumn = 1}, spanEnd = Position {posLine = 117, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 117, posColumn = 6}, spanEnd = Position {posLine = 117, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ComputerDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 117, posColumn = 22}, spanEnd = Position {posLine = 117, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 117, posColumn = 29}, spanEnd = Position {posLine = 117, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 117, posColumn = 30}, spanEnd = Position {posLine = 118, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 118, posColumn = 9}, spanEnd = Position {posLine = 118, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "name"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 118, posColumn = 14}, spanEnd = Position {posLine = 118, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 118, posColumn = 20}, spanEnd = Position {posLine = 119, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 119, posColumn = 1}, spanEnd = Position {posLine = 119, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 119, posColumn = 2}, spanEnd = Position {posLine = 120, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 120, posColumn = 1}, spanEnd = Position {posLine = 121, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 1}, spanEnd = Position {posLine = 121, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 6}, spanEnd = Position {posLine = 121, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 7}, spanEnd = Position {posLine = 121, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "cd"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 10}, spanEnd = Position {posLine = 121, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 11}, spanEnd = Position {posLine = 121, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ComputerDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 26}, spanEnd = Position {posLine = 121, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 28}, spanEnd = Position {posLine = 121, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Update"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 34}, spanEnd = Position {posLine = 121, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 35}, spanEnd = Position {posLine = 121, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 43}, spanEnd = Position {posLine = 121, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 49}, spanEnd = Position {posLine = 121, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 51}, spanEnd = Position {posLine = 121, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 121, posColumn = 52}, spanEnd = Position {posLine = 122, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 9}, spanEnd = Position {posLine = 122, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 12}, spanEnd = Position {posLine = 122, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 13}, spanEnd = Position {posLine = 122, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 19}, spanEnd = Position {posLine = 122, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 20}, spanEnd = Position {posLine = 122, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "%s Display: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 38}, spanEnd = Position {posLine = 122, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 40}, spanEnd = Position {posLine = 122, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "cd"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 42}, spanEnd = Position {posLine = 122, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 43}, spanEnd = Position {posLine = 122, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "name"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 47}, spanEnd = Position {posLine = 122, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 49}, spanEnd = Position {posLine = 122, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 56}, spanEnd = Position {posLine = 122, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 122, posColumn = 57}, spanEnd = Position {posLine = 123, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 123, posColumn = 1}, spanEnd = Position {posLine = 123, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 123, posColumn = 2}, spanEnd = Position {posLine = 124, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 124, posColumn = 1}, spanEnd = Position {posLine = 125, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 125, posColumn = 1}, spanEnd = Position {posLine = 125, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 125, posColumn = 6}, spanEnd = Position {posLine = 125, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 125, posColumn = 14}, spanEnd = Position {posLine = 125, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 125, posColumn = 24}, spanEnd = Position {posLine = 125, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 125, posColumn = 25}, spanEnd = Position {posLine = 126, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 126, posColumn = 9}, spanEnd = Position {posLine = 126, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Execute"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 126, posColumn = 16}, spanEnd = Position {posLine = 126, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 126, posColumn = 17}, spanEnd = Position {posLine = 126, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 126, posColumn = 18}, spanEnd = Position {posLine = 127, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 127, posColumn = 1}, spanEnd = Position {posLine = 127, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 127, posColumn = 2}, spanEnd = Position {posLine = 128, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 128, posColumn = 1}, spanEnd = Position {posLine = 129, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 129, posColumn = 1}, spanEnd = Position {posLine = 129, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 129, posColumn = 6}, spanEnd = Position {posLine = 129, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 129, posColumn = 12}, spanEnd = Position {posLine = 129, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 129, posColumn = 19}, spanEnd = Position {posLine = 129, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 129, posColumn = 20}, spanEnd = Position {posLine = 130, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 130, posColumn = 9}, spanEnd = Position {posLine = 130, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "isOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 130, posColumn = 14}, spanEnd = Position {posLine = 130, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "bool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 130, posColumn = 18}, spanEnd = Position {posLine = 131, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 131, posColumn = 1}, spanEnd = Position {posLine = 131, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 131, posColumn = 2}, spanEnd = Position {posLine = 132, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 132, posColumn = 1}, spanEnd = Position {posLine = 133, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 1}, spanEnd = Position {posLine = 133, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 6}, spanEnd = Position {posLine = 133, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 7}, spanEnd = Position {posLine = 133, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "l"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 9}, spanEnd = Position {posLine = 133, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 10}, spanEnd = Position {posLine = 133, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 15}, spanEnd = Position {posLine = 133, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 17}, spanEnd = Position {posLine = 133, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 23}, spanEnd = Position {posLine = 133, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 24}, spanEnd = Position {posLine = 133, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 26}, spanEnd = Position {posLine = 133, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 133, posColumn = 27}, spanEnd = Position {posLine = 134, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 134, posColumn = 9}, spanEnd = Position {posLine = 134, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "l"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 134, posColumn = 10}, spanEnd = Position {posLine = 134, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 134, posColumn = 11}, spanEnd = Position {posLine = 134, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "isOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 134, posColumn = 16}, spanEnd = Position {posLine = 134, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 134, posColumn = 18}, spanEnd = Position {posLine = 134, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "true"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 134, posColumn = 22}, spanEnd = Position {posLine = 135, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 9}, spanEnd = Position {posLine = 135, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 12}, spanEnd = Position {posLine = 135, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 13}, spanEnd = Position {posLine = 135, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 20}, spanEnd = Position {posLine = 135, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 21}, spanEnd = Position {posLine = 135, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Light is ON"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 34}, spanEnd = Position {posLine = 135, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 135, posColumn = 35}, spanEnd = Position {posLine = 136, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 136, posColumn = 1}, spanEnd = Position {posLine = 136, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 136, posColumn = 2}, spanEnd = Position {posLine = 137, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 137, posColumn = 1}, spanEnd = Position {posLine = 138, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 1}, spanEnd = Position {posLine = 138, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 6}, spanEnd = Position {posLine = 138, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 7}, spanEnd = Position {posLine = 138, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "l"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 9}, spanEnd = Position {posLine = 138, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 10}, spanEnd = Position {posLine = 138, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 15}, spanEnd = Position {posLine = 138, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 17}, spanEnd = Position {posLine = 138, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOff"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 24}, spanEnd = Position {posLine = 138, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 25}, spanEnd = Position {posLine = 138, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 27}, spanEnd = Position {posLine = 138, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 138, posColumn = 28}, spanEnd = Position {posLine = 139, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 139, posColumn = 9}, spanEnd = Position {posLine = 139, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "l"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 139, posColumn = 10}, spanEnd = Position {posLine = 139, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 139, posColumn = 11}, spanEnd = Position {posLine = 139, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "isOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 139, posColumn = 16}, spanEnd = Position {posLine = 139, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 139, posColumn = 18}, spanEnd = Position {posLine = 139, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "false"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 139, posColumn = 23}, spanEnd = Position {posLine = 140, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 9}, spanEnd = Position {posLine = 140, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 12}, spanEnd = Position {posLine = 140, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 13}, spanEnd = Position {posLine = 140, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 20}, spanEnd = Position {posLine = 140, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 21}, spanEnd = Position {posLine = 140, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Light is OFF"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 35}, spanEnd = Position {posLine = 140, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 140, posColumn = 36}, spanEnd = Position {posLine = 141, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 141, posColumn = 1}, spanEnd = Position {posLine = 141, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 141, posColumn = 2}, spanEnd = Position {posLine = 142, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 142, posColumn = 1}, spanEnd = Position {posLine = 143, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 143, posColumn = 1}, spanEnd = Position {posLine = 143, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 143, posColumn = 6}, spanEnd = Position {posLine = 143, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOnCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 143, posColumn = 20}, spanEnd = Position {posLine = 143, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 143, posColumn = 27}, spanEnd = Position {posLine = 143, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 143, posColumn = 28}, spanEnd = Position {posLine = 144, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 144, posColumn = 9}, spanEnd = Position {posLine = 144, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 144, posColumn = 15}, spanEnd = Position {posLine = 144, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 144, posColumn = 16}, spanEnd = Position {posLine = 144, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 144, posColumn = 21}, spanEnd = Position {posLine = 145, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 145, posColumn = 1}, spanEnd = Position {posLine = 145, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 145, posColumn = 2}, spanEnd = Position {posLine = 146, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 146, posColumn = 1}, spanEnd = Position {posLine = 147, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 1}, spanEnd = Position {posLine = 147, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 6}, spanEnd = Position {posLine = 147, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 7}, spanEnd = Position {posLine = 147, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 9}, spanEnd = Position {posLine = 147, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 10}, spanEnd = Position {posLine = 147, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOnCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 23}, spanEnd = Position {posLine = 147, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 25}, spanEnd = Position {posLine = 147, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Execute"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 32}, spanEnd = Position {posLine = 147, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 33}, spanEnd = Position {posLine = 147, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 35}, spanEnd = Position {posLine = 147, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 147, posColumn = 36}, spanEnd = Position {posLine = 148, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 9}, spanEnd = Position {posLine = 148, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 10}, spanEnd = Position {posLine = 148, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 11}, spanEnd = Position {posLine = 148, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 16}, spanEnd = Position {posLine = 148, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 17}, spanEnd = Position {posLine = 148, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 23}, spanEnd = Position {posLine = 148, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 24}, spanEnd = Position {posLine = 148, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 148, posColumn = 25}, spanEnd = Position {posLine = 149, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 149, posColumn = 1}, spanEnd = Position {posLine = 149, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 149, posColumn = 2}, spanEnd = Position {posLine = 150, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 150, posColumn = 1}, spanEnd = Position {posLine = 151, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 151, posColumn = 1}, spanEnd = Position {posLine = 151, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 151, posColumn = 6}, spanEnd = Position {posLine = 151, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOffCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 151, posColumn = 21}, spanEnd = Position {posLine = 151, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 151, posColumn = 28}, spanEnd = Position {posLine = 151, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 151, posColumn = 29}, spanEnd = Position {posLine = 152, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 152, posColumn = 9}, spanEnd = Position {posLine = 152, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 152, posColumn = 15}, spanEnd = Position {posLine = 152, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 152, posColumn = 16}, spanEnd = Position {posLine = 152, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 152, posColumn = 21}, spanEnd = Position {posLine = 153, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 153, posColumn = 1}, spanEnd = Position {posLine = 153, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 153, posColumn = 2}, spanEnd = Position {posLine = 154, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 154, posColumn = 1}, spanEnd = Position {posLine = 155, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 1}, spanEnd = Position {posLine = 155, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 6}, spanEnd = Position {posLine = 155, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 7}, spanEnd = Position {posLine = 155, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 9}, spanEnd = Position {posLine = 155, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 10}, spanEnd = Position {posLine = 155, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOffCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 24}, spanEnd = Position {posLine = 155, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 26}, spanEnd = Position {posLine = 155, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Execute"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 33}, spanEnd = Position {posLine = 155, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 34}, spanEnd = Position {posLine = 155, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 36}, spanEnd = Position {posLine = 155, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 155, posColumn = 37}, spanEnd = Position {posLine = 156, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 9}, spanEnd = Position {posLine = 156, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 10}, spanEnd = Position {posLine = 156, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 11}, spanEnd = Position {posLine = 156, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 16}, spanEnd = Position {posLine = 156, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 17}, spanEnd = Position {posLine = 156, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOff"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 24}, spanEnd = Position {posLine = 156, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 25}, spanEnd = Position {posLine = 156, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 156, posColumn = 26}, spanEnd = Position {posLine = 157, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 157, posColumn = 1}, spanEnd = Position {posLine = 157, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 157, posColumn = 2}, spanEnd = Position {posLine = 158, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 158, posColumn = 1}, spanEnd = Position {posLine = 159, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 159, posColumn = 1}, spanEnd = Position {posLine = 159, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 159, posColumn = 6}, spanEnd = Position {posLine = 159, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoteControl"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 159, posColumn = 20}, spanEnd = Position {posLine = 159, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 159, posColumn = 27}, spanEnd = Position {posLine = 159, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 159, posColumn = 28}, spanEnd = Position {posLine = 160, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 160, posColumn = 9}, spanEnd = Position {posLine = 160, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 160, posColumn = 17}, spanEnd = Position {posLine = 160, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 160, posColumn = 24}, spanEnd = Position {posLine = 161, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 161, posColumn = 1}, spanEnd = Position {posLine = 161, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 161, posColumn = 2}, spanEnd = Position {posLine = 162, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 162, posColumn = 1}, spanEnd = Position {posLine = 163, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 1}, spanEnd = Position {posLine = 163, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 6}, spanEnd = Position {posLine = 163, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 7}, spanEnd = Position {posLine = 163, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "rc"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 10}, spanEnd = Position {posLine = 163, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 11}, spanEnd = Position {posLine = 163, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoteControl"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 24}, spanEnd = Position {posLine = 163, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 26}, spanEnd = Position {posLine = 163, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 36}, spanEnd = Position {posLine = 163, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 37}, spanEnd = Position {posLine = 163, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 45}, spanEnd = Position {posLine = 163, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 52}, spanEnd = Position {posLine = 163, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 54}, spanEnd = Position {posLine = 163, posColumn = 55}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 163, posColumn = 55}, spanEnd = Position {posLine = 164, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 164, posColumn = 9}, spanEnd = Position {posLine = 164, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "rc"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 164, posColumn = 11}, spanEnd = Position {posLine = 164, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 164, posColumn = 12}, spanEnd = Position {posLine = 164, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 164, posColumn = 20}, spanEnd = Position {posLine = 164, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 164, posColumn = 22}, spanEnd = Position {posLine = 164, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 164, posColumn = 29}, spanEnd = Position {posLine = 165, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 165, posColumn = 1}, spanEnd = Position {posLine = 165, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 165, posColumn = 2}, spanEnd = Position {posLine = 166, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 166, posColumn = 1}, spanEnd = Position {posLine = 167, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 1}, spanEnd = Position {posLine = 167, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 6}, spanEnd = Position {posLine = 167, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 7}, spanEnd = Position {posLine = 167, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "rc"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 10}, spanEnd = Position {posLine = 167, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 11}, spanEnd = Position {posLine = 167, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoteControl"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 24}, spanEnd = Position {posLine = 167, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 26}, spanEnd = Position {posLine = 167, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PressButton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 37}, spanEnd = Position {posLine = 167, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 38}, spanEnd = Position {posLine = 167, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 40}, spanEnd = Position {posLine = 167, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 167, posColumn = 41}, spanEnd = Position {posLine = 168, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 9}, spanEnd = Position {posLine = 168, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "rc"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 11}, spanEnd = Position {posLine = 168, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 12}, spanEnd = Position {posLine = 168, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "command"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 19}, spanEnd = Position {posLine = 168, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 20}, spanEnd = Position {posLine = 168, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Execute"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 27}, spanEnd = Position {posLine = 168, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 28}, spanEnd = Position {posLine = 168, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 168, posColumn = 29}, spanEnd = Position {posLine = 169, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 169, posColumn = 1}, spanEnd = Position {posLine = 169, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 169, posColumn = 2}, spanEnd = Position {posLine = 170, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 170, posColumn = 1}, spanEnd = Position {posLine = 171, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 171, posColumn = 1}, spanEnd = Position {posLine = 171, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 171, posColumn = 6}, spanEnd = Position {posLine = 171, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Notifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 171, posColumn = 15}, spanEnd = Position {posLine = 171, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 171, posColumn = 25}, spanEnd = Position {posLine = 171, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 171, posColumn = 26}, spanEnd = Position {posLine = 172, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 172, posColumn = 9}, spanEnd = Position {posLine = 172, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 172, posColumn = 13}, spanEnd = Position {posLine = 172, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 172, posColumn = 14}, spanEnd = Position {posLine = 172, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 172, posColumn = 22}, spanEnd = Position {posLine = 172, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 172, posColumn = 28}, spanEnd = Position {posLine = 172, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 172, posColumn = 29}, spanEnd = Position {posLine = 173, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 173, posColumn = 1}, spanEnd = Position {posLine = 173, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 173, posColumn = 2}, spanEnd = Position {posLine = 174, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 174, posColumn = 1}, spanEnd = Position {posLine = 175, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 175, posColumn = 1}, spanEnd = Position {posLine = 175, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 175, posColumn = 6}, spanEnd = Position {posLine = 175, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "EmailNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 175, posColumn = 20}, spanEnd = Position {posLine = 175, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 175, posColumn = 26}, spanEnd = Position {posLine = 175, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 175, posColumn = 27}, spanEnd = Position {posLine = 175, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 175, posColumn = 28}, spanEnd = Position {posLine = 176, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 176, posColumn = 1}, spanEnd = Position {posLine = 177, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 1}, spanEnd = Position {posLine = 177, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 6}, spanEnd = Position {posLine = 177, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 7}, spanEnd = Position {posLine = 177, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 9}, spanEnd = Position {posLine = 177, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 10}, spanEnd = Position {posLine = 177, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "EmailNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 23}, spanEnd = Position {posLine = 177, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 25}, spanEnd = Position {posLine = 177, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 29}, spanEnd = Position {posLine = 177, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 30}, spanEnd = Position {posLine = 177, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 38}, spanEnd = Position {posLine = 177, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 44}, spanEnd = Position {posLine = 177, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 46}, spanEnd = Position {posLine = 177, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 177, posColumn = 47}, spanEnd = Position {posLine = 178, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 9}, spanEnd = Position {posLine = 178, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 12}, spanEnd = Position {posLine = 178, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 13}, spanEnd = Position {posLine = 178, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 19}, spanEnd = Position {posLine = 178, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 20}, spanEnd = Position {posLine = 178, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Email sent: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 38}, spanEnd = Position {posLine = 178, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 40}, spanEnd = Position {posLine = 178, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 47}, spanEnd = Position {posLine = 178, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 178, posColumn = 48}, spanEnd = Position {posLine = 179, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 179, posColumn = 1}, spanEnd = Position {posLine = 179, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 179, posColumn = 2}, spanEnd = Position {posLine = 180, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 180, posColumn = 1}, spanEnd = Position {posLine = 181, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 181, posColumn = 1}, spanEnd = Position {posLine = 181, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 181, posColumn = 6}, spanEnd = Position {posLine = 181, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SMSNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 181, posColumn = 18}, spanEnd = Position {posLine = 181, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 181, posColumn = 25}, spanEnd = Position {posLine = 181, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 181, posColumn = 26}, spanEnd = Position {posLine = 182, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 182, posColumn = 9}, spanEnd = Position {posLine = 182, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 182, posColumn = 14}, spanEnd = Position {posLine = 182, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Notifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 182, posColumn = 22}, spanEnd = Position {posLine = 183, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 183, posColumn = 1}, spanEnd = Position {posLine = 183, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 183, posColumn = 2}, spanEnd = Position {posLine = 184, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 184, posColumn = 1}, spanEnd = Position {posLine = 185, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 1}, spanEnd = Position {posLine = 185, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 6}, spanEnd = Position {posLine = 185, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 7}, spanEnd = Position {posLine = 185, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 9}, spanEnd = Position {posLine = 185, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 10}, spanEnd = Position {posLine = 185, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SMSNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 21}, spanEnd = Position {posLine = 185, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 23}, spanEnd = Position {posLine = 185, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 27}, spanEnd = Position {posLine = 185, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 28}, spanEnd = Position {posLine = 185, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 36}, spanEnd = Position {posLine = 185, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 42}, spanEnd = Position {posLine = 185, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 44}, spanEnd = Position {posLine = 185, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 185, posColumn = 45}, spanEnd = Position {posLine = 186, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 9}, spanEnd = Position {posLine = 186, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 12}, spanEnd = Position {posLine = 186, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 13}, spanEnd = Position {posLine = 186, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 19}, spanEnd = Position {posLine = 186, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 20}, spanEnd = Position {posLine = 186, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "SMS sent: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 36}, spanEnd = Position {posLine = 186, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 38}, spanEnd = Position {posLine = 186, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 45}, spanEnd = Position {posLine = 186, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 186, posColumn = 46}, spanEnd = Position {posLine = 187, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 9}, spanEnd = Position {posLine = 187, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwIf},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 12}, spanEnd = Position {posLine = 187, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 13}, spanEnd = Position {posLine = 187, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 14}, spanEnd = Position {posLine = 187, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 19}, spanEnd = Position {posLine = 187, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpNe},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 22}, spanEnd = Position {posLine = 187, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "nil"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 26}, spanEnd = Position {posLine = 187, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 187, posColumn = 27}, spanEnd = Position {posLine = 188, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 17}, spanEnd = Position {posLine = 188, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 18}, spanEnd = Position {posLine = 188, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 19}, spanEnd = Position {posLine = 188, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 23}, spanEnd = Position {posLine = 188, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 24}, spanEnd = Position {posLine = 188, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 28}, spanEnd = Position {posLine = 188, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 29}, spanEnd = Position {posLine = 188, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 36}, spanEnd = Position {posLine = 188, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 188, posColumn = 37}, spanEnd = Position {posLine = 189, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 189, posColumn = 9}, spanEnd = Position {posLine = 189, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 189, posColumn = 10}, spanEnd = Position {posLine = 190, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 190, posColumn = 1}, spanEnd = Position {posLine = 190, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 190, posColumn = 2}, spanEnd = Position {posLine = 191, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 191, posColumn = 1}, spanEnd = Position {posLine = 192, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 192, posColumn = 1}, spanEnd = Position {posLine = 192, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 192, posColumn = 6}, spanEnd = Position {posLine = 192, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PushNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 192, posColumn = 19}, spanEnd = Position {posLine = 192, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 192, posColumn = 26}, spanEnd = Position {posLine = 192, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 192, posColumn = 27}, spanEnd = Position {posLine = 193, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 193, posColumn = 9}, spanEnd = Position {posLine = 193, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 193, posColumn = 14}, spanEnd = Position {posLine = 193, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Notifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 193, posColumn = 22}, spanEnd = Position {posLine = 194, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 194, posColumn = 1}, spanEnd = Position {posLine = 194, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 194, posColumn = 2}, spanEnd = Position {posLine = 195, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 195, posColumn = 1}, spanEnd = Position {posLine = 196, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 1}, spanEnd = Position {posLine = 196, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 6}, spanEnd = Position {posLine = 196, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 7}, spanEnd = Position {posLine = 196, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 9}, spanEnd = Position {posLine = 196, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 10}, spanEnd = Position {posLine = 196, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PushNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 22}, spanEnd = Position {posLine = 196, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 24}, spanEnd = Position {posLine = 196, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 28}, spanEnd = Position {posLine = 196, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 29}, spanEnd = Position {posLine = 196, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 37}, spanEnd = Position {posLine = 196, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 43}, spanEnd = Position {posLine = 196, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 45}, spanEnd = Position {posLine = 196, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 196, posColumn = 46}, spanEnd = Position {posLine = 197, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 9}, spanEnd = Position {posLine = 197, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 12}, spanEnd = Position {posLine = 197, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 13}, spanEnd = Position {posLine = 197, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 19}, spanEnd = Position {posLine = 197, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 20}, spanEnd = Position {posLine = 197, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Push notification sent: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 50}, spanEnd = Position {posLine = 197, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 52}, spanEnd = Position {posLine = 197, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 59}, spanEnd = Position {posLine = 197, posColumn = 60}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 197, posColumn = 60}, spanEnd = Position {posLine = 198, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 9}, spanEnd = Position {posLine = 198, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwIf},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 12}, spanEnd = Position {posLine = 198, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 13}, spanEnd = Position {posLine = 198, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 14}, spanEnd = Position {posLine = 198, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 19}, spanEnd = Position {posLine = 198, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpNe},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 22}, spanEnd = Position {posLine = 198, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "nil"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 26}, spanEnd = Position {posLine = 198, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 198, posColumn = 27}, spanEnd = Position {posLine = 199, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 17}, spanEnd = Position {posLine = 199, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 18}, spanEnd = Position {posLine = 199, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 19}, spanEnd = Position {posLine = 199, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 23}, spanEnd = Position {posLine = 199, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 24}, spanEnd = Position {posLine = 199, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 28}, spanEnd = Position {posLine = 199, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 29}, spanEnd = Position {posLine = 199, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "message"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 36}, spanEnd = Position {posLine = 199, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 199, posColumn = 37}, spanEnd = Position {posLine = 200, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 200, posColumn = 9}, spanEnd = Position {posLine = 200, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 200, posColumn = 10}, spanEnd = Position {posLine = 201, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 201, posColumn = 1}, spanEnd = Position {posLine = 201, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 201, posColumn = 2}, spanEnd = Position {posLine = 202, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 202, posColumn = 1}, spanEnd = Position {posLine = 203, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 203, posColumn = 1}, spanEnd = Position {posLine = 203, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 203, posColumn = 6}, spanEnd = Position {posLine = 203, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 203, posColumn = 17}, spanEnd = Position {posLine = 203, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 203, posColumn = 24}, spanEnd = Position {posLine = 203, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 203, posColumn = 25}, spanEnd = Position {posLine = 204, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 204, posColumn = 9}, spanEnd = Position {posLine = 204, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 204, posColumn = 14}, spanEnd = Position {posLine = 204, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwChan},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 204, posColumn = 19}, spanEnd = Position {posLine = 204, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 204, posColumn = 20}, spanEnd = Position {posLine = 204, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 204, posColumn = 32}, spanEnd = Position {posLine = 205, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 205, posColumn = 1}, spanEnd = Position {posLine = 205, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 205, posColumn = 2}, spanEnd = Position {posLine = 206, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 206, posColumn = 1}, spanEnd = Position {posLine = 207, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 207, posColumn = 1}, spanEnd = Position {posLine = 207, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 207, posColumn = 6}, spanEnd = Position {posLine = 207, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 207, posColumn = 19}, spanEnd = Position {posLine = 207, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 207, posColumn = 26}, spanEnd = Position {posLine = 207, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 207, posColumn = 27}, spanEnd = Position {posLine = 208, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 208, posColumn = 9}, spanEnd = Position {posLine = 208, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "id"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 208, posColumn = 14}, spanEnd = Position {posLine = 208, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "int"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 208, posColumn = 17}, spanEnd = Position {posLine = 209, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 209, posColumn = 9}, spanEnd = Position {posLine = 209, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 209, posColumn = 14}, spanEnd = Position {posLine = 209, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 209, posColumn = 20}, spanEnd = Position {posLine = 210, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 210, posColumn = 1}, spanEnd = Position {posLine = 210, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 210, posColumn = 2}, spanEnd = Position {posLine = 211, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 211, posColumn = 1}, spanEnd = Position {posLine = 212, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 1}, spanEnd = Position {posLine = 212, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 6}, spanEnd = Position {posLine = 212, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "NewObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 19}, spanEnd = Position {posLine = 212, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 20}, spanEnd = Position {posLine = 212, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "size"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 25}, spanEnd = Position {posLine = 212, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "int"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 28}, spanEnd = Position {posLine = 212, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 30}, spanEnd = Position {posLine = 212, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 31}, spanEnd = Position {posLine = 212, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 42}, spanEnd = Position {posLine = 212, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 212, posColumn = 43}, spanEnd = Position {posLine = 213, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 9}, spanEnd = Position {posLine = 213, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 14}, spanEnd = Position {posLine = 213, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 17}, spanEnd = Position {posLine = 213, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "make"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 21}, spanEnd = Position {posLine = 213, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 22}, spanEnd = Position {posLine = 213, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwChan},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 27}, spanEnd = Position {posLine = 213, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 28}, spanEnd = Position {posLine = 213, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 40}, spanEnd = Position {posLine = 213, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 42}, spanEnd = Position {posLine = 213, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "size"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 46}, spanEnd = Position {posLine = 213, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 213, posColumn = 47}, spanEnd = Position {posLine = 214, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 9}, spanEnd = Position {posLine = 214, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFor},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 13}, spanEnd = Position {posLine = 214, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 15}, spanEnd = Position {posLine = 214, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 18}, spanEnd = Position {posLine = 214, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "0"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 19}, spanEnd = Position {posLine = 214, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimSemicolon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 21}, spanEnd = Position {posLine = 214, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 23}, spanEnd = Position {posLine = 214, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpLt},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 25}, spanEnd = Position {posLine = 214, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "size"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 29}, spanEnd = Position {posLine = 214, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimSemicolon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 31}, spanEnd = Position {posLine = 214, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 32}, spanEnd = Position {posLine = 214, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpIncrement},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 35}, spanEnd = Position {posLine = 214, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 214, posColumn = 36}, spanEnd = Position {posLine = 215, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 17}, spanEnd = Position {posLine = 215, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 22}, spanEnd = Position {posLine = 215, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpArrow},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 25}, spanEnd = Position {posLine = 215, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 26}, spanEnd = Position {posLine = 215, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 38}, spanEnd = Position {posLine = 215, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 39}, spanEnd = Position {posLine = 215, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "id"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 41}, spanEnd = Position {posLine = 215, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 43}, spanEnd = Position {posLine = 215, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 44}, spanEnd = Position {posLine = 215, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 46}, spanEnd = Position {posLine = 215, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 50}, spanEnd = Position {posLine = 215, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 52}, spanEnd = Position {posLine = 215, posColumn = 55}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 55}, spanEnd = Position {posLine = 215, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 56}, spanEnd = Position {posLine = 215, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Sprintf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 63}, spanEnd = Position {posLine = 215, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 64}, spanEnd = Position {posLine = 215, posColumn = 74}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Object%d"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 74}, spanEnd = Position {posLine = 215, posColumn = 75}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 76}, spanEnd = Position {posLine = 215, posColumn = 77}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 77}, spanEnd = Position {posLine = 215, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 78}, spanEnd = Position {posLine = 215, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 215, posColumn = 79}, spanEnd = Position {posLine = 216, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 216, posColumn = 9}, spanEnd = Position {posLine = 216, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 216, posColumn = 10}, spanEnd = Position {posLine = 217, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 9}, spanEnd = Position {posLine = 217, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 16}, spanEnd = Position {posLine = 217, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 17}, spanEnd = Position {posLine = 217, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 27}, spanEnd = Position {posLine = 217, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 28}, spanEnd = Position {posLine = 217, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 32}, spanEnd = Position {posLine = 217, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 34}, spanEnd = Position {posLine = 217, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 38}, spanEnd = Position {posLine = 217, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 217, posColumn = 39}, spanEnd = Position {posLine = 218, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 218, posColumn = 1}, spanEnd = Position {posLine = 218, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 218, posColumn = 2}, spanEnd = Position {posLine = 219, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 219, posColumn = 1}, spanEnd = Position {posLine = 220, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 1}, spanEnd = Position {posLine = 220, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 6}, spanEnd = Position {posLine = 220, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 7}, spanEnd = Position {posLine = 220, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "op"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 10}, spanEnd = Position {posLine = 220, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 11}, spanEnd = Position {posLine = 220, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 21}, spanEnd = Position {posLine = 220, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 23}, spanEnd = Position {posLine = 220, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Acquire"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 30}, spanEnd = Position {posLine = 220, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 31}, spanEnd = Position {posLine = 220, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 33}, spanEnd = Position {posLine = 220, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 34}, spanEnd = Position {posLine = 220, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 47}, spanEnd = Position {posLine = 220, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 220, posColumn = 48}, spanEnd = Position {posLine = 221, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 221, posColumn = 9}, spanEnd = Position {posLine = 221, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwSelect},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 221, posColumn = 16}, spanEnd = Position {posLine = 221, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 221, posColumn = 17}, spanEnd = Position {posLine = 222, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 9}, spanEnd = Position {posLine = 222, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwCase},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 14}, spanEnd = Position {posLine = 222, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 18}, spanEnd = Position {posLine = 222, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 21}, spanEnd = Position {posLine = 222, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpArrow},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 23}, spanEnd = Position {posLine = 222, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "op"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 25}, spanEnd = Position {posLine = 222, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 26}, spanEnd = Position {posLine = 222, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 30}, spanEnd = Position {posLine = 222, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 222, posColumn = 31}, spanEnd = Position {posLine = 223, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 223, posColumn = 17}, spanEnd = Position {posLine = 223, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 223, posColumn = 24}, spanEnd = Position {posLine = 223, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 223, posColumn = 27}, spanEnd = Position {posLine = 224, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 224, posColumn = 9}, spanEnd = Position {posLine = 224, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwDefault},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 224, posColumn = 16}, spanEnd = Position {posLine = 224, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 224, posColumn = 17}, spanEnd = Position {posLine = 225, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 17}, spanEnd = Position {posLine = 225, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwReturn},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 24}, spanEnd = Position {posLine = 225, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 25}, spanEnd = Position {posLine = 225, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 37}, spanEnd = Position {posLine = 225, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 38}, spanEnd = Position {posLine = 225, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "id"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 40}, spanEnd = Position {posLine = 225, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 42}, spanEnd = Position {posLine = 225, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMinus},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 43}, spanEnd = Position {posLine = 225, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 44}, spanEnd = Position {posLine = 225, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 46}, spanEnd = Position {posLine = 225, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 50}, spanEnd = Position {posLine = 225, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 52}, spanEnd = Position {posLine = 225, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "New Object"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 64}, spanEnd = Position {posLine = 225, posColumn = 65}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 225, posColumn = 65}, spanEnd = Position {posLine = 226, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 226, posColumn = 9}, spanEnd = Position {posLine = 226, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 226, posColumn = 10}, spanEnd = Position {posLine = 227, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 227, posColumn = 1}, spanEnd = Position {posLine = 227, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 227, posColumn = 2}, spanEnd = Position {posLine = 228, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 228, posColumn = 1}, spanEnd = Position {posLine = 229, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 1}, spanEnd = Position {posLine = 229, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 6}, spanEnd = Position {posLine = 229, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 7}, spanEnd = Position {posLine = 229, posColumn = 9}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "op"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 10}, spanEnd = Position {posLine = 229, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 11}, spanEnd = Position {posLine = 229, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 21}, spanEnd = Position {posLine = 229, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 23}, spanEnd = Position {posLine = 229, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Release"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 30}, spanEnd = Position {posLine = 229, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 31}, spanEnd = Position {posLine = 229, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 35}, spanEnd = Position {posLine = 229, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 36}, spanEnd = Position {posLine = 229, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PooledObject"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 48}, spanEnd = Position {posLine = 229, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 50}, spanEnd = Position {posLine = 229, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 229, posColumn = 51}, spanEnd = Position {posLine = 230, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 230, posColumn = 9}, spanEnd = Position {posLine = 230, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwSelect},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 230, posColumn = 16}, spanEnd = Position {posLine = 230, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 230, posColumn = 17}, spanEnd = Position {posLine = 231, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 9}, spanEnd = Position {posLine = 231, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwCase},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 14}, spanEnd = Position {posLine = 231, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "op"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 16}, spanEnd = Position {posLine = 231, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 17}, spanEnd = Position {posLine = 231, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 22}, spanEnd = Position {posLine = 231, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpArrow},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 25}, spanEnd = Position {posLine = 231, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 28}, spanEnd = Position {posLine = 231, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 231, posColumn = 29}, spanEnd = Position {posLine = 232, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 17}, spanEnd = Position {posLine = 232, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 20}, spanEnd = Position {posLine = 232, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 21}, spanEnd = Position {posLine = 232, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 27}, spanEnd = Position {posLine = 232, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 28}, spanEnd = Position {posLine = 232, posColumn = 58}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Object %d returned to pool\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 58}, spanEnd = Position {posLine = 232, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 60}, spanEnd = Position {posLine = 232, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 63}, spanEnd = Position {posLine = 232, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 64}, spanEnd = Position {posLine = 232, posColumn = 66}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "id"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 66}, spanEnd = Position {posLine = 232, posColumn = 67}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 232, posColumn = 67}, spanEnd = Position {posLine = 233, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 233, posColumn = 9}, spanEnd = Position {posLine = 233, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwDefault},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 233, posColumn = 16}, spanEnd = Position {posLine = 233, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 233, posColumn = 17}, spanEnd = Position {posLine = 234, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 17}, spanEnd = Position {posLine = 234, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 20}, spanEnd = Position {posLine = 234, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 21}, spanEnd = Position {posLine = 234, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 27}, spanEnd = Position {posLine = 234, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 28}, spanEnd = Position {posLine = 234, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Pool full, object %d discarded\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 62}, spanEnd = Position {posLine = 234, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 64}, spanEnd = Position {posLine = 234, posColumn = 67}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 67}, spanEnd = Position {posLine = 234, posColumn = 68}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 68}, spanEnd = Position {posLine = 234, posColumn = 70}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "id"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 70}, spanEnd = Position {posLine = 234, posColumn = 71}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 234, posColumn = 71}, spanEnd = Position {posLine = 235, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 235, posColumn = 9}, spanEnd = Position {posLine = 235, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 235, posColumn = 10}, spanEnd = Position {posLine = 236, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 236, posColumn = 1}, spanEnd = Position {posLine = 236, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 236, posColumn = 2}, spanEnd = Position {posLine = 237, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 237, posColumn = 1}, spanEnd = Position {posLine = 238, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 238, posColumn = 1}, spanEnd = Position {posLine = 238, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 238, posColumn = 6}, spanEnd = Position {posLine = 238, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "main"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 238, posColumn = 10}, spanEnd = Position {posLine = 238, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 238, posColumn = 11}, spanEnd = Position {posLine = 238, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 238, posColumn = 13}, spanEnd = Position {posLine = 238, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 238, posColumn = 14}, spanEnd = Position {posLine = 239, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 9}, spanEnd = Position {posLine = 239, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 12}, spanEnd = Position {posLine = 239, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 13}, spanEnd = Position {posLine = 239, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 20}, spanEnd = Position {posLine = 239, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 21}, spanEnd = Position {posLine = 239, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "=== Design Patterns in Go ==="},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 52}, spanEnd = Position {posLine = 239, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 239, posColumn = 53}, spanEnd = Position {posLine = 240, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 240, posColumn = 1}, spanEnd = Position {posLine = 241, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 9}, spanEnd = Position {posLine = 241, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 12}, spanEnd = Position {posLine = 241, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 13}, spanEnd = Position {posLine = 241, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 20}, spanEnd = Position {posLine = 241, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 21}, spanEnd = Position {posLine = 241, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Singleton Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 50}, spanEnd = Position {posLine = 241, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 241, posColumn = 51}, spanEnd = Position {posLine = 242, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 242, posColumn = 9}, spanEnd = Position {posLine = 242, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 242, posColumn = 20}, spanEnd = Position {posLine = 242, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 242, posColumn = 23}, spanEnd = Position {posLine = 242, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetInstance"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 242, posColumn = 34}, spanEnd = Position {posLine = 242, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 242, posColumn = 35}, spanEnd = Position {posLine = 242, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 242, posColumn = 36}, spanEnd = Position {posLine = 243, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 243, posColumn = 9}, spanEnd = Position {posLine = 243, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 243, posColumn = 20}, spanEnd = Position {posLine = 243, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 243, posColumn = 23}, spanEnd = Position {posLine = 243, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetInstance"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 243, posColumn = 34}, spanEnd = Position {posLine = 243, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 243, posColumn = 35}, spanEnd = Position {posLine = 243, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 243, posColumn = 36}, spanEnd = Position {posLine = 244, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 9}, spanEnd = Position {posLine = 244, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 12}, spanEnd = Position {posLine = 244, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 13}, spanEnd = Position {posLine = 244, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 19}, spanEnd = Position {posLine = 244, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 20}, spanEnd = Position {posLine = 244, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Singleton 1: %p, Data: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 49}, spanEnd = Position {posLine = 244, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 51}, spanEnd = Position {posLine = 244, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 61}, spanEnd = Position {posLine = 244, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 63}, spanEnd = Position {posLine = 244, posColumn = 73}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 73}, spanEnd = Position {posLine = 244, posColumn = 74}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 74}, spanEnd = Position {posLine = 244, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 78}, spanEnd = Position {posLine = 244, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 244, posColumn = 79}, spanEnd = Position {posLine = 245, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 9}, spanEnd = Position {posLine = 245, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 12}, spanEnd = Position {posLine = 245, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 13}, spanEnd = Position {posLine = 245, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 19}, spanEnd = Position {posLine = 245, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 20}, spanEnd = Position {posLine = 245, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Singleton 2: %p, Data: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 49}, spanEnd = Position {posLine = 245, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 51}, spanEnd = Position {posLine = 245, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 61}, spanEnd = Position {posLine = 245, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 63}, spanEnd = Position {posLine = 245, posColumn = 73}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 73}, spanEnd = Position {posLine = 245, posColumn = 74}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 74}, spanEnd = Position {posLine = 245, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 78}, spanEnd = Position {posLine = 245, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 245, posColumn = 79}, spanEnd = Position {posLine = 246, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 9}, spanEnd = Position {posLine = 246, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 12}, spanEnd = Position {posLine = 246, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 13}, spanEnd = Position {posLine = 246, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 19}, spanEnd = Position {posLine = 246, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 20}, spanEnd = Position {posLine = 246, posColumn = 54}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Are they the same instance? %t\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 54}, spanEnd = Position {posLine = 246, posColumn = 55}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 56}, spanEnd = Position {posLine = 246, posColumn = 66}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 67}, spanEnd = Position {posLine = 246, posColumn = 69}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpEq},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 70}, spanEnd = Position {posLine = 246, posColumn = 80}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "singleton2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 80}, spanEnd = Position {posLine = 246, posColumn = 81}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 246, posColumn = 81}, spanEnd = Position {posLine = 247, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 247, posColumn = 1}, spanEnd = Position {posLine = 248, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 9}, spanEnd = Position {posLine = 248, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 12}, spanEnd = Position {posLine = 248, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 13}, spanEnd = Position {posLine = 248, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 20}, spanEnd = Position {posLine = 248, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 21}, spanEnd = Position {posLine = 248, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Factory Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 48}, spanEnd = Position {posLine = 248, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 248, posColumn = 49}, spanEnd = Position {posLine = 249, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 9}, spanEnd = Position {posLine = 249, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "factories"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 19}, spanEnd = Position {posLine = 249, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 22}, spanEnd = Position {posLine = 249, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 23}, spanEnd = Position {posLine = 249, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 24}, spanEnd = Position {posLine = 249, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ShapeFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 36}, spanEnd = Position {posLine = 249, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 249, posColumn = 37}, spanEnd = Position {posLine = 250, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 250, posColumn = 17}, spanEnd = Position {posLine = 250, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 250, posColumn = 18}, spanEnd = Position {posLine = 250, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CircleFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 250, posColumn = 31}, spanEnd = Position {posLine = 250, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 250, posColumn = 32}, spanEnd = Position {posLine = 250, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 250, posColumn = 33}, spanEnd = Position {posLine = 250, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 250, posColumn = 34}, spanEnd = Position {posLine = 251, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 251, posColumn = 17}, spanEnd = Position {posLine = 251, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 251, posColumn = 18}, spanEnd = Position {posLine = 251, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RectangleFactory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 251, posColumn = 34}, spanEnd = Position {posLine = 251, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 251, posColumn = 35}, spanEnd = Position {posLine = 251, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 251, posColumn = 36}, spanEnd = Position {posLine = 251, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 251, posColumn = 37}, spanEnd = Position {posLine = 252, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 252, posColumn = 9}, spanEnd = Position {posLine = 252, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 252, posColumn = 10}, spanEnd = Position {posLine = 253, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 253, posColumn = 1}, spanEnd = Position {posLine = 254, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 9}, spanEnd = Position {posLine = 254, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFor},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 13}, spanEnd = Position {posLine = 254, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 14}, spanEnd = Position {posLine = 254, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 16}, spanEnd = Position {posLine = 254, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "factory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 24}, spanEnd = Position {posLine = 254, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 27}, spanEnd = Position {posLine = 254, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwRange},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 33}, spanEnd = Position {posLine = 254, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "factories"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 43}, spanEnd = Position {posLine = 254, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 254, posColumn = 44}, spanEnd = Position {posLine = 255, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 17}, spanEnd = Position {posLine = 255, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 23}, spanEnd = Position {posLine = 255, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 26}, spanEnd = Position {posLine = 255, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "factory"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 33}, spanEnd = Position {posLine = 255, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 34}, spanEnd = Position {posLine = 255, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreateShape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 45}, spanEnd = Position {posLine = 255, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 46}, spanEnd = Position {posLine = 255, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 255, posColumn = 47}, spanEnd = Position {posLine = 256, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 17}, spanEnd = Position {posLine = 256, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 20}, spanEnd = Position {posLine = 256, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 21}, spanEnd = Position {posLine = 256, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 27}, spanEnd = Position {posLine = 256, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 28}, spanEnd = Position {posLine = 256, posColumn = 58}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Factory %d: %s, Area: %.2f\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 58}, spanEnd = Position {posLine = 256, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 60}, spanEnd = Position {posLine = 256, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 61}, spanEnd = Position {posLine = 256, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpPlus},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 62}, spanEnd = Position {posLine = 256, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 63}, spanEnd = Position {posLine = 256, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 65}, spanEnd = Position {posLine = 256, posColumn = 70}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 70}, spanEnd = Position {posLine = 256, posColumn = 71}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 71}, spanEnd = Position {posLine = 256, posColumn = 75}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Draw"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 75}, spanEnd = Position {posLine = 256, posColumn = 76}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 76}, spanEnd = Position {posLine = 256, posColumn = 77}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 77}, spanEnd = Position {posLine = 256, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 79}, spanEnd = Position {posLine = 256, posColumn = 84}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "shape"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 84}, spanEnd = Position {posLine = 256, posColumn = 85}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 85}, spanEnd = Position {posLine = 256, posColumn = 92}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "GetArea"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 92}, spanEnd = Position {posLine = 256, posColumn = 93}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 93}, spanEnd = Position {posLine = 256, posColumn = 94}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 94}, spanEnd = Position {posLine = 256, posColumn = 95}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 256, posColumn = 95}, spanEnd = Position {posLine = 257, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 257, posColumn = 9}, spanEnd = Position {posLine = 257, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 257, posColumn = 10}, spanEnd = Position {posLine = 258, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 258, posColumn = 1}, spanEnd = Position {posLine = 259, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 9}, spanEnd = Position {posLine = 259, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 12}, spanEnd = Position {posLine = 259, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 13}, spanEnd = Position {posLine = 259, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 20}, spanEnd = Position {posLine = 259, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 21}, spanEnd = Position {posLine = 259, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Observer Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 49}, spanEnd = Position {posLine = 259, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 259, posColumn = 50}, spanEnd = Position {posLine = 260, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 9}, spanEnd = Position {posLine = 260, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 24}, spanEnd = Position {posLine = 260, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 27}, spanEnd = Position {posLine = 260, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 28}, spanEnd = Position {posLine = 260, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "WeatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 42}, spanEnd = Position {posLine = 260, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 43}, spanEnd = Position {posLine = 260, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 260, posColumn = 44}, spanEnd = Position {posLine = 261, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 261, posColumn = 1}, spanEnd = Position {posLine = 262, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 9}, spanEnd = Position {posLine = 262, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "phoneDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 22}, spanEnd = Position {posLine = 262, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 25}, spanEnd = Position {posLine = 262, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 26}, spanEnd = Position {posLine = 262, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PhoneDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 38}, spanEnd = Position {posLine = 262, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 39}, spanEnd = Position {posLine = 262, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "name"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 43}, spanEnd = Position {posLine = 262, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 45}, spanEnd = Position {posLine = 262, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Phone"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 52}, spanEnd = Position {posLine = 262, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 262, posColumn = 53}, spanEnd = Position {posLine = 263, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 9}, spanEnd = Position {posLine = 263, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "computerDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 25}, spanEnd = Position {posLine = 263, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 28}, spanEnd = Position {posLine = 263, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 29}, spanEnd = Position {posLine = 263, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "ComputerDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 44}, spanEnd = Position {posLine = 263, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 45}, spanEnd = Position {posLine = 263, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "name"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 49}, spanEnd = Position {posLine = 263, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 51}, spanEnd = Position {posLine = 263, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Computer"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 61}, spanEnd = Position {posLine = 263, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 263, posColumn = 62}, spanEnd = Position {posLine = 264, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 264, posColumn = 1}, spanEnd = Position {posLine = 265, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 9}, spanEnd = Position {posLine = 265, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 23}, spanEnd = Position {posLine = 265, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 24}, spanEnd = Position {posLine = 265, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RegisterObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 40}, spanEnd = Position {posLine = 265, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 41}, spanEnd = Position {posLine = 265, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "phoneDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 53}, spanEnd = Position {posLine = 265, posColumn = 54}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 265, posColumn = 54}, spanEnd = Position {posLine = 266, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 9}, spanEnd = Position {posLine = 266, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 23}, spanEnd = Position {posLine = 266, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 24}, spanEnd = Position {posLine = 266, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RegisterObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 40}, spanEnd = Position {posLine = 266, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 41}, spanEnd = Position {posLine = 266, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "computerDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 56}, spanEnd = Position {posLine = 266, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 266, posColumn = 57}, spanEnd = Position {posLine = 267, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 267, posColumn = 1}, spanEnd = Position {posLine = 268, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 9}, spanEnd = Position {posLine = 268, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 23}, spanEnd = Position {posLine = 268, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 24}, spanEnd = Position {posLine = 268, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetTemperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 38}, spanEnd = Position {posLine = 268, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 39}, spanEnd = Position {posLine = 268, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenFloat "25.5"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 43}, spanEnd = Position {posLine = 268, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 268, posColumn = 44}, spanEnd = Position {posLine = 269, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 9}, spanEnd = Position {posLine = 269, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 23}, spanEnd = Position {posLine = 269, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 24}, spanEnd = Position {posLine = 269, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetTemperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 38}, spanEnd = Position {posLine = 269, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 39}, spanEnd = Position {posLine = 269, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenFloat "30.0"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 43}, spanEnd = Position {posLine = 269, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 269, posColumn = 44}, spanEnd = Position {posLine = 270, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 270, posColumn = 1}, spanEnd = Position {posLine = 271, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 9}, spanEnd = Position {posLine = 271, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 23}, spanEnd = Position {posLine = 271, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 24}, spanEnd = Position {posLine = 271, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoveObserver"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 38}, spanEnd = Position {posLine = 271, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 39}, spanEnd = Position {posLine = 271, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "phoneDisplay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 51}, spanEnd = Position {posLine = 271, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 271, posColumn = 52}, spanEnd = Position {posLine = 272, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 9}, spanEnd = Position {posLine = 272, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "weatherStation"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 23}, spanEnd = Position {posLine = 272, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 24}, spanEnd = Position {posLine = 272, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetTemperature"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 38}, spanEnd = Position {posLine = 272, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 39}, spanEnd = Position {posLine = 272, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenFloat "22.0"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 43}, spanEnd = Position {posLine = 272, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 272, posColumn = 44}, spanEnd = Position {posLine = 273, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 273, posColumn = 1}, spanEnd = Position {posLine = 274, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 9}, spanEnd = Position {posLine = 274, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 12}, spanEnd = Position {posLine = 274, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 13}, spanEnd = Position {posLine = 274, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 20}, spanEnd = Position {posLine = 274, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 21}, spanEnd = Position {posLine = 274, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Command Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 48}, spanEnd = Position {posLine = 274, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 274, posColumn = 49}, spanEnd = Position {posLine = 275, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 9}, spanEnd = Position {posLine = 275, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 15}, spanEnd = Position {posLine = 275, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 18}, spanEnd = Position {posLine = 275, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 19}, spanEnd = Position {posLine = 275, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 24}, spanEnd = Position {posLine = 275, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 25}, spanEnd = Position {posLine = 275, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 275, posColumn = 26}, spanEnd = Position {posLine = 276, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 9}, spanEnd = Position {posLine = 276, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "turnOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 16}, spanEnd = Position {posLine = 276, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 19}, spanEnd = Position {posLine = 276, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 20}, spanEnd = Position {posLine = 276, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOnCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 33}, spanEnd = Position {posLine = 276, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 34}, spanEnd = Position {posLine = 276, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 39}, spanEnd = Position {posLine = 276, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 41}, spanEnd = Position {posLine = 276, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 46}, spanEnd = Position {posLine = 276, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 276, posColumn = 47}, spanEnd = Position {posLine = 277, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 9}, spanEnd = Position {posLine = 277, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "turnOff"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 17}, spanEnd = Position {posLine = 277, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 20}, spanEnd = Position {posLine = 277, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 21}, spanEnd = Position {posLine = 277, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "TurnOffCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 35}, spanEnd = Position {posLine = 277, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 36}, spanEnd = Position {posLine = 277, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 41}, spanEnd = Position {posLine = 277, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 43}, spanEnd = Position {posLine = 277, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "light"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 48}, spanEnd = Position {posLine = 277, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 277, posColumn = 49}, spanEnd = Position {posLine = 278, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 278, posColumn = 1}, spanEnd = Position {posLine = 279, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 9}, spanEnd = Position {posLine = 279, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "remote"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 16}, spanEnd = Position {posLine = 279, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 19}, spanEnd = Position {posLine = 279, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 20}, spanEnd = Position {posLine = 279, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "RemoteControl"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 33}, spanEnd = Position {posLine = 279, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 34}, spanEnd = Position {posLine = 279, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 279, posColumn = 35}, spanEnd = Position {posLine = 280, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 280, posColumn = 1}, spanEnd = Position {posLine = 281, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 9}, spanEnd = Position {posLine = 281, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "remote"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 15}, spanEnd = Position {posLine = 281, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 16}, spanEnd = Position {posLine = 281, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 26}, spanEnd = Position {posLine = 281, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 27}, spanEnd = Position {posLine = 281, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "turnOn"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 33}, spanEnd = Position {posLine = 281, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 281, posColumn = 34}, spanEnd = Position {posLine = 282, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 282, posColumn = 9}, spanEnd = Position {posLine = 282, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "remote"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 282, posColumn = 15}, spanEnd = Position {posLine = 282, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 282, posColumn = 16}, spanEnd = Position {posLine = 282, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PressButton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 282, posColumn = 27}, spanEnd = Position {posLine = 282, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 282, posColumn = 28}, spanEnd = Position {posLine = 282, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 282, posColumn = 29}, spanEnd = Position {posLine = 283, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 283, posColumn = 1}, spanEnd = Position {posLine = 284, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 9}, spanEnd = Position {posLine = 284, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "remote"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 15}, spanEnd = Position {posLine = 284, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 16}, spanEnd = Position {posLine = 284, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetCommand"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 26}, spanEnd = Position {posLine = 284, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 27}, spanEnd = Position {posLine = 284, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "turnOff"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 34}, spanEnd = Position {posLine = 284, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 284, posColumn = 35}, spanEnd = Position {posLine = 285, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 285, posColumn = 9}, spanEnd = Position {posLine = 285, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "remote"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 285, posColumn = 15}, spanEnd = Position {posLine = 285, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 285, posColumn = 16}, spanEnd = Position {posLine = 285, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PressButton"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 285, posColumn = 27}, spanEnd = Position {posLine = 285, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 285, posColumn = 28}, spanEnd = Position {posLine = 285, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 285, posColumn = 29}, spanEnd = Position {posLine = 286, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 286, posColumn = 1}, spanEnd = Position {posLine = 287, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 9}, spanEnd = Position {posLine = 287, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 12}, spanEnd = Position {posLine = 287, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 13}, spanEnd = Position {posLine = 287, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 20}, spanEnd = Position {posLine = 287, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 21}, spanEnd = Position {posLine = 287, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Chain of Responsibility Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 64}, spanEnd = Position {posLine = 287, posColumn = 65}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 287, posColumn = 65}, spanEnd = Position {posLine = 288, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 9}, spanEnd = Position {posLine = 288, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "emailNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 23}, spanEnd = Position {posLine = 288, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 26}, spanEnd = Position {posLine = 288, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 27}, spanEnd = Position {posLine = 288, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "EmailNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 40}, spanEnd = Position {posLine = 288, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 41}, spanEnd = Position {posLine = 288, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 288, posColumn = 42}, spanEnd = Position {posLine = 289, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 9}, spanEnd = Position {posLine = 289, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "smsNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 21}, spanEnd = Position {posLine = 289, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 24}, spanEnd = Position {posLine = 289, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 25}, spanEnd = Position {posLine = 289, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SMSNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 36}, spanEnd = Position {posLine = 289, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 37}, spanEnd = Position {posLine = 289, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 41}, spanEnd = Position {posLine = 289, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 43}, spanEnd = Position {posLine = 289, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "emailNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 56}, spanEnd = Position {posLine = 289, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 289, posColumn = 57}, spanEnd = Position {posLine = 290, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 9}, spanEnd = Position {posLine = 290, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pushNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 22}, spanEnd = Position {posLine = 290, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 25}, spanEnd = Position {posLine = 290, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 26}, spanEnd = Position {posLine = 290, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PushNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 38}, spanEnd = Position {posLine = 290, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 39}, spanEnd = Position {posLine = 290, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "next"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 43}, spanEnd = Position {posLine = 290, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 45}, spanEnd = Position {posLine = 290, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "smsNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 56}, spanEnd = Position {posLine = 290, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 290, posColumn = 57}, spanEnd = Position {posLine = 291, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 291, posColumn = 1}, spanEnd = Position {posLine = 292, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 9}, spanEnd = Position {posLine = 292, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 12}, spanEnd = Position {posLine = 292, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 13}, spanEnd = Position {posLine = 292, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 20}, spanEnd = Position {posLine = 292, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 21}, spanEnd = Position {posLine = 292, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Sending notification through full chain:"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 63}, spanEnd = Position {posLine = 292, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 292, posColumn = 64}, spanEnd = Position {posLine = 293, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 9}, spanEnd = Position {posLine = 293, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pushNotifier"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 21}, spanEnd = Position {posLine = 293, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 22}, spanEnd = Position {posLine = 293, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Send"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 26}, spanEnd = Position {posLine = 293, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 27}, spanEnd = Position {posLine = 293, posColumn = 58}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "System maintenance at 2:00 AM"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 58}, spanEnd = Position {posLine = 293, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 293, posColumn = 59}, spanEnd = Position {posLine = 294, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 294, posColumn = 1}, spanEnd = Position {posLine = 295, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 9}, spanEnd = Position {posLine = 295, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 12}, spanEnd = Position {posLine = 295, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 13}, spanEnd = Position {posLine = 295, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 20}, spanEnd = Position {posLine = 295, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 21}, spanEnd = Position {posLine = 295, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Object Pool Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 52}, spanEnd = Position {posLine = 295, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 295, posColumn = 53}, spanEnd = Position {posLine = 296, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 9}, spanEnd = Position {posLine = 296, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 14}, spanEnd = Position {posLine = 296, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 17}, spanEnd = Position {posLine = 296, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "NewObjectPool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 30}, spanEnd = Position {posLine = 296, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 31}, spanEnd = Position {posLine = 296, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "3"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 32}, spanEnd = Position {posLine = 296, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 296, posColumn = 33}, spanEnd = Position {posLine = 297, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 297, posColumn = 1}, spanEnd = Position {posLine = 298, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 9}, spanEnd = Position {posLine = 298, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 14}, spanEnd = Position {posLine = 298, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 17}, spanEnd = Position {posLine = 298, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 21}, spanEnd = Position {posLine = 298, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 22}, spanEnd = Position {posLine = 298, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Acquire"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 29}, spanEnd = Position {posLine = 298, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 30}, spanEnd = Position {posLine = 298, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 298, posColumn = 31}, spanEnd = Position {posLine = 299, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 9}, spanEnd = Position {posLine = 299, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 14}, spanEnd = Position {posLine = 299, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 17}, spanEnd = Position {posLine = 299, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 21}, spanEnd = Position {posLine = 299, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 22}, spanEnd = Position {posLine = 299, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Acquire"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 29}, spanEnd = Position {posLine = 299, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 30}, spanEnd = Position {posLine = 299, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 299, posColumn = 31}, spanEnd = Position {posLine = 300, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 9}, spanEnd = Position {posLine = 300, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj3"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 14}, spanEnd = Position {posLine = 300, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 17}, spanEnd = Position {posLine = 300, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 21}, spanEnd = Position {posLine = 300, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 22}, spanEnd = Position {posLine = 300, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Acquire"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 29}, spanEnd = Position {posLine = 300, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 30}, spanEnd = Position {posLine = 300, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 300, posColumn = 31}, spanEnd = Position {posLine = 301, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 9}, spanEnd = Position {posLine = 301, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj4"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 14}, spanEnd = Position {posLine = 301, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 17}, spanEnd = Position {posLine = 301, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 21}, spanEnd = Position {posLine = 301, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 22}, spanEnd = Position {posLine = 301, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Acquire"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 29}, spanEnd = Position {posLine = 301, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 30}, spanEnd = Position {posLine = 301, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 301, posColumn = 31}, spanEnd = Position {posLine = 302, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 302, posColumn = 1}, spanEnd = Position {posLine = 303, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 9}, spanEnd = Position {posLine = 303, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 12}, spanEnd = Position {posLine = 303, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 13}, spanEnd = Position {posLine = 303, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 19}, spanEnd = Position {posLine = 303, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 20}, spanEnd = Position {posLine = 303, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Acquired: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 36}, spanEnd = Position {posLine = 303, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 38}, spanEnd = Position {posLine = 303, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 42}, spanEnd = Position {posLine = 303, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 43}, spanEnd = Position {posLine = 303, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 47}, spanEnd = Position {posLine = 303, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 303, posColumn = 48}, spanEnd = Position {posLine = 304, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 9}, spanEnd = Position {posLine = 304, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 12}, spanEnd = Position {posLine = 304, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 13}, spanEnd = Position {posLine = 304, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 19}, spanEnd = Position {posLine = 304, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 20}, spanEnd = Position {posLine = 304, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Acquired: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 36}, spanEnd = Position {posLine = 304, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 38}, spanEnd = Position {posLine = 304, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 42}, spanEnd = Position {posLine = 304, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 43}, spanEnd = Position {posLine = 304, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 47}, spanEnd = Position {posLine = 304, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 304, posColumn = 48}, spanEnd = Position {posLine = 305, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 9}, spanEnd = Position {posLine = 305, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 12}, spanEnd = Position {posLine = 305, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 13}, spanEnd = Position {posLine = 305, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 19}, spanEnd = Position {posLine = 305, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 20}, spanEnd = Position {posLine = 305, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Acquired: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 36}, spanEnd = Position {posLine = 305, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 38}, spanEnd = Position {posLine = 305, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj3"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 42}, spanEnd = Position {posLine = 305, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 43}, spanEnd = Position {posLine = 305, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 47}, spanEnd = Position {posLine = 305, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 305, posColumn = 48}, spanEnd = Position {posLine = 306, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 9}, spanEnd = Position {posLine = 306, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 12}, spanEnd = Position {posLine = 306, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 13}, spanEnd = Position {posLine = 306, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 19}, spanEnd = Position {posLine = 306, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 20}, spanEnd = Position {posLine = 306, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Acquired: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 36}, spanEnd = Position {posLine = 306, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 38}, spanEnd = Position {posLine = 306, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj4"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 42}, spanEnd = Position {posLine = 306, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 43}, spanEnd = Position {posLine = 306, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 47}, spanEnd = Position {posLine = 306, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 306, posColumn = 48}, spanEnd = Position {posLine = 307, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 307, posColumn = 1}, spanEnd = Position {posLine = 308, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 9}, spanEnd = Position {posLine = 308, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 13}, spanEnd = Position {posLine = 308, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 14}, spanEnd = Position {posLine = 308, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Release"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 21}, spanEnd = Position {posLine = 308, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 22}, spanEnd = Position {posLine = 308, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 26}, spanEnd = Position {posLine = 308, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 308, posColumn = 27}, spanEnd = Position {posLine = 309, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 9}, spanEnd = Position {posLine = 309, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 13}, spanEnd = Position {posLine = 309, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 14}, spanEnd = Position {posLine = 309, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Release"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 21}, spanEnd = Position {posLine = 309, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 22}, spanEnd = Position {posLine = 309, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj2"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 26}, spanEnd = Position {posLine = 309, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 309, posColumn = 27}, spanEnd = Position {posLine = 310, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 310, posColumn = 1}, spanEnd = Position {posLine = 311, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 9}, spanEnd = Position {posLine = 311, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj5"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 14}, spanEnd = Position {posLine = 311, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 17}, spanEnd = Position {posLine = 311, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "pool"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 21}, spanEnd = Position {posLine = 311, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 22}, spanEnd = Position {posLine = 311, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Acquire"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 29}, spanEnd = Position {posLine = 311, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 30}, spanEnd = Position {posLine = 311, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 311, posColumn = 31}, spanEnd = Position {posLine = 312, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 9}, spanEnd = Position {posLine = 312, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 12}, spanEnd = Position {posLine = 312, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 13}, spanEnd = Position {posLine = 312, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 19}, spanEnd = Position {posLine = 312, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 20}, spanEnd = Position {posLine = 312, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Acquired after release: %s\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 50}, spanEnd = Position {posLine = 312, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 52}, spanEnd = Position {posLine = 312, posColumn = 56}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "obj5"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 56}, spanEnd = Position {posLine = 312, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 57}, spanEnd = Position {posLine = 312, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "data"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 61}, spanEnd = Position {posLine = 312, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 312, posColumn = 62}, spanEnd = Position {posLine = 313, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 313, posColumn = 1}, spanEnd = Position {posLine = 314, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 9}, spanEnd = Position {posLine = 314, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 12}, spanEnd = Position {posLine = 314, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 13}, spanEnd = Position {posLine = 314, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Println"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 20}, spanEnd = Position {posLine = 314, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 21}, spanEnd = Position {posLine = 314, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "\n--- Strategy Pattern ---"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 49}, spanEnd = Position {posLine = 314, posColumn = 50}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 314, posColumn = 50}, spanEnd = Position {posLine = 315, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 9}, spanEnd = Position {posLine = 315, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategies"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 20}, spanEnd = Position {posLine = 315, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 23}, spanEnd = Position {posLine = 315, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 24}, spanEnd = Position {posLine = 315, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBracket},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 25}, spanEnd = Position {posLine = 315, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 40}, spanEnd = Position {posLine = 315, posColumn = 41}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 315, posColumn = 41}, spanEnd = Position {posLine = 316, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 17}, spanEnd = Position {posLine = 316, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 18}, spanEnd = Position {posLine = 316, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreditCardStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 36}, spanEnd = Position {posLine = 316, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 37}, spanEnd = Position {posLine = 316, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "cardNumber"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 47}, spanEnd = Position {posLine = 316, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 49}, spanEnd = Position {posLine = 316, posColumn = 70}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "1234-5678-9012-3456"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 70}, spanEnd = Position {posLine = 316, posColumn = 71}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 71}, spanEnd = Position {posLine = 316, posColumn = 72}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 316, posColumn = 72}, spanEnd = Position {posLine = 317, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 17}, spanEnd = Position {posLine = 317, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 18}, spanEnd = Position {posLine = 317, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PayPalStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 32}, spanEnd = Position {posLine = 317, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 33}, spanEnd = Position {posLine = 317, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "email"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 38}, spanEnd = Position {posLine = 317, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 40}, spanEnd = Position {posLine = 317, posColumn = 58}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "user@example.com"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 58}, spanEnd = Position {posLine = 317, posColumn = 59}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 59}, spanEnd = Position {posLine = 317, posColumn = 60}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 317, posColumn = 60}, spanEnd = Position {posLine = 318, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 17}, spanEnd = Position {posLine = 318, posColumn = 18}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 18}, spanEnd = Position {posLine = 318, posColumn = 32}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CryptoStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 32}, spanEnd = Position {posLine = 318, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 33}, spanEnd = Position {posLine = 318, posColumn = 39}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "wallet"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 39}, spanEnd = Position {posLine = 318, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimColon},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 41}, spanEnd = Position {posLine = 318, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "0x1234567890abcdef"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 61}, spanEnd = Position {posLine = 318, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 62}, spanEnd = Position {posLine = 318, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 318, posColumn = 63}, spanEnd = Position {posLine = 319, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 319, posColumn = 9}, spanEnd = Position {posLine = 319, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 319, posColumn = 10}, spanEnd = Position {posLine = 320, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 320, posColumn = 1}, spanEnd = Position {posLine = 321, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 9}, spanEnd = Position {posLine = 321, posColumn = 16}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "context"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 17}, spanEnd = Position {posLine = 321, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 20}, spanEnd = Position {posLine = 321, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAddress},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 21}, spanEnd = Position {posLine = 321, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentContext"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 35}, spanEnd = Position {posLine = 321, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 36}, spanEnd = Position {posLine = 321, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 321, posColumn = 37}, spanEnd = Position {posLine = 322, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 322, posColumn = 1}, spanEnd = Position {posLine = 323, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 9}, spanEnd = Position {posLine = 323, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFor},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 13}, spanEnd = Position {posLine = 323, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 14}, spanEnd = Position {posLine = 323, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 16}, spanEnd = Position {posLine = 323, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 25}, spanEnd = Position {posLine = 323, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpDefine},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 28}, spanEnd = Position {posLine = 323, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwRange},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 34}, spanEnd = Position {posLine = 323, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategies"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 45}, spanEnd = Position {posLine = 323, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 323, posColumn = 46}, spanEnd = Position {posLine = 324, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 17}, spanEnd = Position {posLine = 324, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "context"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 24}, spanEnd = Position {posLine = 324, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 25}, spanEnd = Position {posLine = 324, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 36}, spanEnd = Position {posLine = 324, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 37}, spanEnd = Position {posLine = 324, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 45}, spanEnd = Position {posLine = 324, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 324, posColumn = 46}, spanEnd = Position {posLine = 325, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 17}, spanEnd = Position {posLine = 325, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 20}, spanEnd = Position {posLine = 325, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 21}, spanEnd = Position {posLine = 325, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 27}, spanEnd = Position {posLine = 325, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 28}, spanEnd = Position {posLine = 325, posColumn = 42}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Payment %d: "},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 42}, spanEnd = Position {posLine = 325, posColumn = 43}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 44}, spanEnd = Position {posLine = 325, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "i"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 45}, spanEnd = Position {posLine = 325, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpPlus},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 46}, spanEnd = Position {posLine = 325, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenInt "1"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 47}, spanEnd = Position {posLine = 325, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 325, posColumn = 48}, spanEnd = Position {posLine = 326, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 17}, spanEnd = Position {posLine = 326, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "context"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 24}, spanEnd = Position {posLine = 326, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 25}, spanEnd = Position {posLine = 326, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 28}, spanEnd = Position {posLine = 326, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 29}, spanEnd = Position {posLine = 326, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenFloat "100.0"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 34}, spanEnd = Position {posLine = 326, posColumn = 35}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 326, posColumn = 35}, spanEnd = Position {posLine = 327, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 327, posColumn = 9}, spanEnd = Position {posLine = 327, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 327, posColumn = 10}, spanEnd = Position {posLine = 328, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 328, posColumn = 1}, spanEnd = Position {posLine = 328, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 328, posColumn = 2}, spanEnd = Position {posLine = 329, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 329, posColumn = 1}, spanEnd = Position {posLine = 330, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 330, posColumn = 1}, spanEnd = Position {posLine = 330, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 330, posColumn = 6}, spanEnd = Position {posLine = 330, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 330, posColumn = 22}, spanEnd = Position {posLine = 330, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwInterface},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 330, posColumn = 32}, spanEnd = Position {posLine = 330, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 330, posColumn = 33}, spanEnd = Position {posLine = 331, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 331, posColumn = 9}, spanEnd = Position {posLine = 331, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 331, posColumn = 12}, spanEnd = Position {posLine = 331, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 331, posColumn = 13}, spanEnd = Position {posLine = 331, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 331, posColumn = 20}, spanEnd = Position {posLine = 331, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 331, posColumn = 27}, spanEnd = Position {posLine = 331, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 331, posColumn = 28}, spanEnd = Position {posLine = 332, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 332, posColumn = 1}, spanEnd = Position {posLine = 332, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 332, posColumn = 2}, spanEnd = Position {posLine = 333, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 333, posColumn = 1}, spanEnd = Position {posLine = 334, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 334, posColumn = 1}, spanEnd = Position {posLine = 334, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 334, posColumn = 6}, spanEnd = Position {posLine = 334, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreditCardStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 334, posColumn = 25}, spanEnd = Position {posLine = 334, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 334, posColumn = 32}, spanEnd = Position {posLine = 334, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 334, posColumn = 33}, spanEnd = Position {posLine = 335, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 335, posColumn = 9}, spanEnd = Position {posLine = 335, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "cardNumber"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 335, posColumn = 20}, spanEnd = Position {posLine = 335, posColumn = 26}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 335, posColumn = 26}, spanEnd = Position {posLine = 336, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 336, posColumn = 1}, spanEnd = Position {posLine = 336, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 336, posColumn = 2}, spanEnd = Position {posLine = 337, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 337, posColumn = 1}, spanEnd = Position {posLine = 338, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 1}, spanEnd = Position {posLine = 338, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 6}, spanEnd = Position {posLine = 338, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 7}, spanEnd = Position {posLine = 338, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "s"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 9}, spanEnd = Position {posLine = 338, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 10}, spanEnd = Position {posLine = 338, posColumn = 28}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CreditCardStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 28}, spanEnd = Position {posLine = 338, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 30}, spanEnd = Position {posLine = 338, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 33}, spanEnd = Position {posLine = 338, posColumn = 34}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 34}, spanEnd = Position {posLine = 338, posColumn = 40}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 41}, spanEnd = Position {posLine = 338, posColumn = 48}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 48}, spanEnd = Position {posLine = 338, posColumn = 49}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 50}, spanEnd = Position {posLine = 338, posColumn = 51}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 338, posColumn = 51}, spanEnd = Position {posLine = 339, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 9}, spanEnd = Position {posLine = 339, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 12}, spanEnd = Position {posLine = 339, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 13}, spanEnd = Position {posLine = 339, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 19}, spanEnd = Position {posLine = 339, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 20}, spanEnd = Position {posLine = 339, posColumn = 57}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Paid $%.2f using Credit Card (%s)\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 57}, spanEnd = Position {posLine = 339, posColumn = 58}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 59}, spanEnd = Position {posLine = 339, posColumn = 65}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 65}, spanEnd = Position {posLine = 339, posColumn = 66}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 67}, spanEnd = Position {posLine = 339, posColumn = 68}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "s"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 68}, spanEnd = Position {posLine = 339, posColumn = 69}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 69}, spanEnd = Position {posLine = 339, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "cardNumber"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 79}, spanEnd = Position {posLine = 339, posColumn = 80}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 339, posColumn = 80}, spanEnd = Position {posLine = 340, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 340, posColumn = 1}, spanEnd = Position {posLine = 340, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 340, posColumn = 2}, spanEnd = Position {posLine = 341, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 341, posColumn = 1}, spanEnd = Position {posLine = 342, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 342, posColumn = 1}, spanEnd = Position {posLine = 342, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 342, posColumn = 6}, spanEnd = Position {posLine = 342, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PayPalStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 342, posColumn = 21}, spanEnd = Position {posLine = 342, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 342, posColumn = 28}, spanEnd = Position {posLine = 342, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 342, posColumn = 29}, spanEnd = Position {posLine = 343, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 343, posColumn = 9}, spanEnd = Position {posLine = 343, posColumn = 14}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "email"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 343, posColumn = 15}, spanEnd = Position {posLine = 343, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 343, posColumn = 21}, spanEnd = Position {posLine = 344, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 344, posColumn = 1}, spanEnd = Position {posLine = 344, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 344, posColumn = 2}, spanEnd = Position {posLine = 345, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 345, posColumn = 1}, spanEnd = Position {posLine = 346, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 1}, spanEnd = Position {posLine = 346, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 6}, spanEnd = Position {posLine = 346, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 7}, spanEnd = Position {posLine = 346, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "s"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 9}, spanEnd = Position {posLine = 346, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 10}, spanEnd = Position {posLine = 346, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PayPalStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 24}, spanEnd = Position {posLine = 346, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 26}, spanEnd = Position {posLine = 346, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 29}, spanEnd = Position {posLine = 346, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 30}, spanEnd = Position {posLine = 346, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 37}, spanEnd = Position {posLine = 346, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 44}, spanEnd = Position {posLine = 346, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 46}, spanEnd = Position {posLine = 346, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 346, posColumn = 47}, spanEnd = Position {posLine = 347, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 9}, spanEnd = Position {posLine = 347, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 12}, spanEnd = Position {posLine = 347, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 13}, spanEnd = Position {posLine = 347, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 19}, spanEnd = Position {posLine = 347, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 20}, spanEnd = Position {posLine = 347, posColumn = 52}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Paid $%.2f using PayPal (%s)\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 52}, spanEnd = Position {posLine = 347, posColumn = 53}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 54}, spanEnd = Position {posLine = 347, posColumn = 60}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 60}, spanEnd = Position {posLine = 347, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 62}, spanEnd = Position {posLine = 347, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "s"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 63}, spanEnd = Position {posLine = 347, posColumn = 64}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 64}, spanEnd = Position {posLine = 347, posColumn = 69}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "email"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 69}, spanEnd = Position {posLine = 347, posColumn = 70}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 347, posColumn = 70}, spanEnd = Position {posLine = 348, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 348, posColumn = 1}, spanEnd = Position {posLine = 348, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 348, posColumn = 2}, spanEnd = Position {posLine = 349, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 349, posColumn = 1}, spanEnd = Position {posLine = 350, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 350, posColumn = 1}, spanEnd = Position {posLine = 350, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 350, posColumn = 6}, spanEnd = Position {posLine = 350, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CryptoStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 350, posColumn = 21}, spanEnd = Position {posLine = 350, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 350, posColumn = 28}, spanEnd = Position {posLine = 350, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 350, posColumn = 29}, spanEnd = Position {posLine = 351, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 351, posColumn = 9}, spanEnd = Position {posLine = 351, posColumn = 15}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "wallet"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 351, posColumn = 16}, spanEnd = Position {posLine = 351, posColumn = 22}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "string"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 351, posColumn = 22}, spanEnd = Position {posLine = 352, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 352, posColumn = 1}, spanEnd = Position {posLine = 352, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 352, posColumn = 2}, spanEnd = Position {posLine = 353, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 353, posColumn = 1}, spanEnd = Position {posLine = 354, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 1}, spanEnd = Position {posLine = 354, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 6}, spanEnd = Position {posLine = 354, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 7}, spanEnd = Position {posLine = 354, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "s"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 9}, spanEnd = Position {posLine = 354, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 10}, spanEnd = Position {posLine = 354, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "CryptoStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 24}, spanEnd = Position {posLine = 354, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 26}, spanEnd = Position {posLine = 354, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 29}, spanEnd = Position {posLine = 354, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 30}, spanEnd = Position {posLine = 354, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 37}, spanEnd = Position {posLine = 354, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 44}, spanEnd = Position {posLine = 354, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 46}, spanEnd = Position {posLine = 354, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 354, posColumn = 47}, spanEnd = Position {posLine = 355, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 9}, spanEnd = Position {posLine = 355, posColumn = 12}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "fmt"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 12}, spanEnd = Position {posLine = 355, posColumn = 13}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 13}, spanEnd = Position {posLine = 355, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Printf"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 19}, spanEnd = Position {posLine = 355, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 20}, spanEnd = Position {posLine = 355, posColumn = 60}}), annLeading = [], annTrailing = []}, locValue = GoTokenString "Paid $%.2f using Cryptocurrency (%s)\n"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 60}, spanEnd = Position {posLine = 355, posColumn = 61}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 62}, spanEnd = Position {posLine = 355, posColumn = 68}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 68}, spanEnd = Position {posLine = 355, posColumn = 69}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimComma},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 70}, spanEnd = Position {posLine = 355, posColumn = 71}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "s"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 71}, spanEnd = Position {posLine = 355, posColumn = 72}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 72}, spanEnd = Position {posLine = 355, posColumn = 78}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "wallet"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 78}, spanEnd = Position {posLine = 355, posColumn = 79}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 355, posColumn = 79}, spanEnd = Position {posLine = 356, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 356, posColumn = 1}, spanEnd = Position {posLine = 356, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 356, posColumn = 2}, spanEnd = Position {posLine = 357, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 357, posColumn = 1}, spanEnd = Position {posLine = 358, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 358, posColumn = 1}, spanEnd = Position {posLine = 358, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwType},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 358, posColumn = 6}, spanEnd = Position {posLine = 358, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentContext"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 358, posColumn = 21}, spanEnd = Position {posLine = 358, posColumn = 27}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwStruct},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 358, posColumn = 28}, spanEnd = Position {posLine = 358, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 358, posColumn = 29}, spanEnd = Position {posLine = 359, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 359, posColumn = 9}, spanEnd = Position {posLine = 359, posColumn = 17}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 359, posColumn = 18}, spanEnd = Position {posLine = 359, posColumn = 33}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 359, posColumn = 33}, spanEnd = Position {posLine = 360, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 360, posColumn = 1}, spanEnd = Position {posLine = 360, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 360, posColumn = 2}, spanEnd = Position {posLine = 361, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 361, posColumn = 1}, spanEnd = Position {posLine = 362, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 1}, spanEnd = Position {posLine = 362, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 6}, spanEnd = Position {posLine = 362, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 7}, spanEnd = Position {posLine = 362, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 9}, spanEnd = Position {posLine = 362, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 10}, spanEnd = Position {posLine = 362, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentContext"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 24}, spanEnd = Position {posLine = 362, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 26}, spanEnd = Position {posLine = 362, posColumn = 37}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "SetStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 37}, spanEnd = Position {posLine = 362, posColumn = 38}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 38}, spanEnd = Position {posLine = 362, posColumn = 46}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 47}, spanEnd = Position {posLine = 362, posColumn = 62}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentStrategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 62}, spanEnd = Position {posLine = 362, posColumn = 63}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 64}, spanEnd = Position {posLine = 362, posColumn = 65}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 362, posColumn = 65}, spanEnd = Position {posLine = 363, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 363, posColumn = 9}, spanEnd = Position {posLine = 363, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 363, posColumn = 10}, spanEnd = Position {posLine = 363, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 363, posColumn = 11}, spanEnd = Position {posLine = 363, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 363, posColumn = 20}, spanEnd = Position {posLine = 363, posColumn = 21}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpAssign},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 363, posColumn = 22}, spanEnd = Position {posLine = 363, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 363, posColumn = 30}, spanEnd = Position {posLine = 364, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 364, posColumn = 1}, spanEnd = Position {posLine = 364, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 364, posColumn = 2}, spanEnd = Position {posLine = 365, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 365, posColumn = 1}, spanEnd = Position {posLine = 366, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 1}, spanEnd = Position {posLine = 366, posColumn = 5}}), annLeading = [], annTrailing = []}, locValue = GoTokenKeyword GoKwFunc},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 6}, spanEnd = Position {posLine = 366, posColumn = 7}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 7}, spanEnd = Position {posLine = 366, posColumn = 8}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 9}, spanEnd = Position {posLine = 366, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenOperator GoOpMult},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 10}, spanEnd = Position {posLine = 366, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "PaymentContext"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 24}, spanEnd = Position {posLine = 366, posColumn = 25}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 26}, spanEnd = Position {posLine = 366, posColumn = 29}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 29}, spanEnd = Position {posLine = 366, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 30}, spanEnd = Position {posLine = 366, posColumn = 36}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 37}, spanEnd = Position {posLine = 366, posColumn = 44}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "float64"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 44}, spanEnd = Position {posLine = 366, posColumn = 45}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 46}, spanEnd = Position {posLine = 366, posColumn = 47}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftBrace},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 366, posColumn = 47}, spanEnd = Position {posLine = 367, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 9}, spanEnd = Position {posLine = 367, posColumn = 10}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "c"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 10}, spanEnd = Position {posLine = 367, posColumn = 11}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 11}, spanEnd = Position {posLine = 367, posColumn = 19}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "strategy"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 19}, spanEnd = Position {posLine = 367, posColumn = 20}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimDot},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 20}, spanEnd = Position {posLine = 367, posColumn = 23}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "Pay"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 23}, spanEnd = Position {posLine = 367, posColumn = 24}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimLeftParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 24}, spanEnd = Position {posLine = 367, posColumn = 30}}), annLeading = [], annTrailing = []}, locValue = GoTokenIdent "amount"},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 30}, spanEnd = Position {posLine = 367, posColumn = 31}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightParen},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 367, posColumn = 31}, spanEnd = Position {posLine = 368, posColumn = 1}}), annLeading = [], annTrailing = []}, locValue = GoTokenNewline},Located {locAnn = NodeAnn {annSpan = Just (Span {spanStart = Position {posLine = 368, posColumn = 1}, spanEnd = Position {posLine = 368, posColumn = 2}}), annLeading = [], annTrailing = []}, locValue = GoTokenDelimiter GoDelimRightBrace}], pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "design_patterns.go", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}

  To rerun use: --match "/Fluxus Compiler Comprehensive Test Suite/Unit Tests/Parsers/Go Comprehensive Syntax Coverage/parses all Go examples in test/go250923/"

Randomized with seed 890473029

Finished in 139.5788 seconds
277 examples, 1 failure



fluxus> Test suite fluxus-test failed

Error: [S-7282]
       Stack failed to execute the build plan.
       
       While executing the build plan, Stack encountered the error:
       
       Error: [S-1995]
       Test suite failure for package fluxus-0.1.0.0
           fluxus-test:  exited with: ExitFailure 1
       Logs printed to console
       
