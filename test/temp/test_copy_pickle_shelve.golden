=== Testing Shallow vs Deep Copy ===
Original: {'numbers': [1, 2, 3], 'nested': {'inner': [4, 5, 6]}, 'simple': 'string'}
Shallow copy: {'numbers': [1, 2, 3], 'nested': {'inner': [4, 5, 6]}, 'simple': 'string'}
Deep copy: {'numbers': [1, 2, 3], 'nested': {'inner': [4, 5, 6]}, 'simple': 'string'}

After modifying original:
Original: {'numbers': [1, 2, 3, 999], 'nested': {'inner': [4, 5, 6, 888]}, 'simple': 'modified'}
Shallow copy (affected by nested changes): {'numbers': [1, 2, 3, 999], 'nested': {'inner': [4, 5, 6, 888]}, 'simple': 'string'}
Deep copy (unaffected): {'numbers': [1, 2, 3], 'nested': {'inner': [4, 5, 6]}, 'simple': 'string'}

=== Testing Copy Edge Cases ===
Circular reference before copy:
a: [1, 2, 3, [4, 5, 6, [...]]]
b: [4, 5, 6, [1, 2, 3, [...]]]

Deep copy of circular reference:
a_copy: [1, 2, 3, [4, 5, 6, [...]]]

After modifying original a[0] = 999:
original a: [999, 2, 3, [4, 5, 6, [...]]]
copied a_copy: [1, 2, 3, [4, 5, 6, [...]]]

=== Testing Pickle Serialization ===
Original data: {'string': 'hello world', 'list': [1, 2.5, True, None], 'dict': {'nested': {'deep': 'value'}}, 'tuple': (1, 2, 3), 'set': {4, 5, 6}}
Pickled data size: 132 bytes
Unpickled data: {'string': 'hello world', 'list': [1, 2.5, True, None], 'dict': {'nested': {'deep': 'value'}}, 'tuple': (1, 2, 3), 'set': {4, 5, 6}}
Data equality: True
Protocol 0: size = 206 bytes, works = True
Protocol 1: size = 193 bytes, works = True
Protocol 2: size = 190 bytes, works = True
Protocol 3: size = 187 bytes, works = True
Protocol 4: size = 132 bytes, works = True
Protocol 5: size = 132 bytes, works = True

=== Testing Shelve Persistence ===
Data written to shelve database
Data read from shelve database:
  numbers: [1, 2, 3, 4, 5]
  settings: {'theme': 'dark', 'language': 'en'}
  timestamp: 1760203650.1475964
  user_data: {'name': 'Alice', 'age': 30}

Data modified in database
Modified data:
  user_data: {'name': 'Alice', 'age': 31}
  new_key: new_value

=== Testing Copy Performance ===
Shallow copy time: 0.0000 seconds
Deep copy time: 0.0243 seconds
Deep copy is 2750.5x slower
Shallow copy first item data == original: True
Deep copy first item data == original: True
After modifying original, shallow copy reflects change: True
After modifying original, deep copy remains unchanged: True

=== All copy and serialization tests completed ===