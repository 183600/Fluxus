=== Advanced Python Metaclass and Descriptor Patterns ===
=== Testing Advanced Metaclass Patterns ===

--- Singleton Metaclass ---
Database connection established: postgresql://localhost:5432/mydb
db1 is db2: True
Connection string: postgresql://localhost:5432/mydb

--- Factory Metaclass ---
Electronic product: Laptop: $999.99 (Warranty: 24 months)
Book product: Python Guide by John Doe: $49.99 (300 pages)

--- Registry Metaclass ---
Registered classes: ['ServiceA', 'ServiceB']
ServiceA: Service A processing
ServiceB: Service B processing

--- Auto-Properties Metaclass ---
Name: Alice, Age: 25, Email: alice@example.com
Updated - Name: Alice, Age: 26, Email: alice.smith@example.com

--- Validated Metaclass ---
Valid object created: age=25, email=valid@email.com
Validation error (expected): Invalid age: 200

=== Testing Advanced Descriptor Patterns ===
Initial person: John Doe, 25, john@example.com

--- Validated Attributes ---
Age updated to: 30
Age validation error (expected): Age must be an integer between 0 and 150: 200
Email validation error (expected): Email must contain @ symbol: invalid-email

--- Observable Attribute ---
Name changed from 'John Doe' to 'Jane Doe'
Name changed from 'Jane Doe' to 'John Smith'

--- Thread-Safe Attribute ---
Deposited $100.00. New balance: $100.00
Withdrew $30.00. New balance: $70.00
Insufficient funds. Current balance: $70.00

--- Cached Property ---
Performing expensive computation...
First computation result: 1000
Using cached computation result
Second computation result (cached): 1000
Waiting for cache to expire...
Performing expensive computation...
Third computation result (after expiry): 1000
Performing expensive computation...
Fourth computation result (after manual clear): 1000

=== All metaclass and descriptor tests completed successfully! ===