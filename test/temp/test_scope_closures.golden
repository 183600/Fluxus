=== Global and Local Scope ===
Inside function: local x
Outside function: global x

=== global Keyword ===
Before: counter = 0
After: counter = 2
Before: value1=10, value2=20
After: value1=100, value2=200

=== nonlocal Keyword ===
Before inner: outer x
Inner: modified by inner
After inner: modified by inner

=== Simple Closures ===
times_two(5) = 10
times_three(5) = 15

=== Closure Counter ===
counter1: 1, 2, 3
counter2: 1, 2

=== Closure with Multiple Functions ===
Initial balance: 100
After deposit(50): 150
After withdraw(30): 120
Final balance: 120

=== LEGB Rule ===
Local: local
Enclosing: enclosing
Global: global

=== Closure in Loop (Fixed) ===
mult[0](10) = 0
mult[1](10) = 10
mult[2](10) = 20
mult[3](10) = 30
mult[4](10) = 40

=== Nested Closures ===
outer(1)(2)(3) = 6

=== Closure vs Class ===
avg(10) = 10.0
avg(20) = 15.0
avg(30) = 20.0

=== Reading Outer Variables ===
Result: 30

=== Modifying Mutable Outer Variables ===
add('a') = ['a']
add('b') = ['a', 'b']
add('c') = ['a', 'b', 'c']

=== Closure State Preservation ===
square(4) = 16
cube(4) = 64

=== All scope and closure tests completed ===