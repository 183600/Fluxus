Python SQLite Integration Demonstration
==================================================
=== Creating Sample Database ===
✓ Database tables created successfully

=== Testing Basic CRUD Operations ===
✓ Inserted 4 users and 6 orders

--- Reading Data ---
All users:
  ID: 1, Username: alice, Email: alice@example.com, Age: 25
  ID: 2, Username: bob, Email: bob@example.com, Age: 30
  ID: 3, Username: charlie, Email: charlie@example.com, Age: 35
  ID: 4, Username: diana, Email: diana@example.com, Age: 28

Alice's details: {'id': 1, 'username': 'alice', 'email': 'alice@example.com', 'age': 25, 'created_at': '2025-10-11 17:28:14', 'updated_at': '2025-10-11 17:28:14'}

Users older than 28:
  bob: 30 years old
  charlie: 35 years old

--- Updating Data ---
✓ Alice's age updated to: 26

--- Deleting Data ---
✓ Remaining orders: 5

=== Testing Advanced Queries ===
User orders (JOIN):

  alice (alice@example.com):
    - Laptop: 1 x $999.99 [completed]
    - Mouse: 2 x $29.99 [completed]

  bob (bob@example.com):
    - Keyboard: 1 x $79.99 [pending]

  charlie (charlie@example.com):
    - Monitor: 1 x $299.99 [pending]

  diana (diana@example.com):
    - Headphones: 1 x $149.99 [pending]

--- Aggregation Functions ---
Total users: 4
Average user age: 29.8
Total revenue: $1589.94
Most expensive order: $999.99

User spending statistics:
  alice: 2 orders, $1059.97 total
  charlie: 1 orders, $299.99 total
  diana: 1 orders, $149.99 total
  bob: 1 orders, $79.99 total

=== Testing Transactions ===
--- Successful Transaction ---
✓ Transaction committed successfully

--- Transaction Rollback ---
✓ Expected integrity error: UNIQUE constraint failed: users.username
✓ Transaction was automatically rolled back

=== Testing Prepared Statements ===
✓ Inserted 3 users using prepared statement
Users aged 25-35: 7
  alice: 26 years old
  bob: 30 years old
  diana: 28 years old
  eve: 32 years old
  grace: 27 years old
  henry: 33 years old
  iris: 29 years old

=== Testing Database Metadata ===
Database tables:
  - users
  - sqlite_sequence
  - orders

users table structure:
  id: INTEGER (NULL: True)
  username: TEXT (NULL: False)
  email: TEXT (NULL: False)
  age: INTEGER (NULL: True)
  created_at: TIMESTAMP (NULL: True)
  updated_at: TIMESTAMP (NULL: True)

orders table structure:
  id: INTEGER (NULL: True)
  user_id: INTEGER (NULL: True)
  product_name: TEXT (NULL: False)
  quantity: INTEGER (NULL: False)
  price: REAL (NULL: False)
  order_date: TIMESTAMP (NULL: True)
  status: TEXT (NULL: True)

SQLite version: 3.50.4

=== Testing Error Handling ===
--- Testing Duplicate Key Error ---
✓ Caught expected integrity error: UNIQUE constraint failed: users.username

--- Testing Foreign Key Constraint ---
Note: Foreign key constraints may not be enforced by default in SQLite

--- Testing SQL Injection Protection ---
✓ Parameterized query safely handled malicious input: 0 results

=== All SQLite tests completed successfully ===
Database file: /tmp/tmpqtqkg2jz.db
Key concepts covered:
- Database creation and table schema
- CRUD operations (Create, Read, Update, Delete)
- SQL JOIN queries
- Aggregation functions (COUNT, SUM, AVG, MAX)
- GROUP BY and data grouping
- Transaction management (commit/rollback)
- Prepared statements for security
- Database metadata inspection
- Error handling for database operations

Cleaned up temporary database: /tmp/tmpqtqkg2jz.db