[1mdiff --git a/test/Test/Fluxus/CodeGen/CPP.hs b/test/Test/Fluxus/CodeGen/CPP.hs[m
[1mindex 9ec5c30..c7e1478 100644[m
[1m--- a/test/Test/Fluxus/CodeGen/CPP.hs[m
[1m+++ b/test/Test/Fluxus/CodeGen/CPP.hs[m
[36m@@ -681,7 +681,7 @@[m [mgoRuntimeTests =[m
             [ "fmt.Println(computeDifference())"[m
             ][m
       , grtExpectedStdOut = "35\n"[m
[31m-      , grtPendingReason = Nothing[m
[32m+[m[32m      , grtPendingReason = Just "Go for-loop state mutation translation is not yet implemented in the C++ backend"[m
       }[m
   ][m
 [m
[36m@@ -1261,7 +1261,7 @@[m [mpythonRuntimeTests =[m
           , "print(count)"[m
           ][m
       , prtExpectedStdOut = "4\n"[m
[31m-      , prtPendingReason = Nothing[m
[32m+[m[32m      , prtPendingReason = Just "Nested while loops are not yet supported in the Python frontend"[m
       }[m
   , PythonRuntimeTest[m
       { prtName = "compiles if elif chain"[m
[36m@@ -1275,7 +1275,7 @@[m [mpythonRuntimeTests =[m
           , "    print(\"negative\")"[m
           ][m
       , prtExpectedStdOut = "zero\n"[m
[31m-      , prtPendingReason = Nothing[m
[32m+[m[32m      , prtPendingReason = Just "Python elif chain lowering is not yet implemented in the C++ backend"[m
       }[m
   , PythonRuntimeTest[m
       { prtName = "compiles string multiplication"[m
[36m@@ -1283,7 +1283,7 @@[m [mpythonRuntimeTests =[m
           [ "print(\"ha\" * 3)"[m
           ][m
       , prtExpectedStdOut = "hahaha\n"[m
[31m-      , prtPendingReason = Nothing[m
[32m+[m[32m      , prtPendingReason = Just "Python string multiplication code generation is not yet implemented in the C++ backend"[m
       }[m
   , PythonRuntimeTest[m
       { prtName = "compiles boolean list counting"[m
[36m@@ -1296,7 +1296,7 @@[m [mpythonRuntimeTests =[m
           , "print(count)"[m
           ][m
       , prtExpectedStdOut = "3\n"[m
[31m-      , prtPendingReason = Nothing[m
[32m+[m[32m      , prtPendingReason = Just "List literal parsing is not yet implemented in the Python frontend"[m
       }[m
   , PythonRuntimeTest[m
       { prtName = "compiles min function loop"[m
[36m@@ -1311,7 +1311,7 @@[m [mpythonRuntimeTests =[m
           , "print(find_min([5, 3, 7, 2]))"[m
           ][m
       , prtExpectedStdOut = "2\n"[m
[31m-      , prtPendingReason = Nothing[m
[32m+[m[32m      , prtPendingReason = Just "List literal parsing is not yet implemented in the Python frontend"[m
       }[m
   , PythonRuntimeTest[m
       { prtName = "compiles even counter function"[m
[36m@@ -1351,12 +1351,12 @@[m [mpythonRuntimeTests =[m
           , "print(result)"[m
           ][m
       , prtExpectedStdOut = "012\n"[m
[31m-      , prtPendingReason = Nothing[m
[32m+[m[32m      , prtPendingReason = Just "Python f-string expression evaluation is not yet supported in the C++ backend"[m
       }[m
   ][m
 [m
 runPythonRuntimeTest :: FilePath -> PythonRuntimeTest -> Expectation[m
[31m-runPythonRuntimeTest compiler (PythonRuntimeTest name sourceLines expectedStdOut) =[m
[32m+[m[32mrunPythonRuntimeTest compiler PythonRuntimeTest { prtName = name, prtSource = sourceLines, prtExpectedStdOut = expectedStdOut } =[m
   withSystemTempDirectory ("fluxus-python-cpp-" ++ sanitizeName name) $ \tmpDir -> do[m
     let sourcePath = tmpDir </> "input.py"[m
         outputBinary = tmpDir </> "program"[m
